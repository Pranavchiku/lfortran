; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [10 x i8] c"%23.17e%s\00", align 1

define double @enorm(double* %n) {
.entry:
  %y = alloca double, align 8
  %0 = load double, double* %n, align 8
  store double %0, double* %y, align 8
  br label %return

unreachable_after_return:                         ; No predecessors!
  br label %return

return:                                           ; preds = %unreachable_after_return, %.entry
  %1 = load double, double* %y, align 8
  ret double %1
}

define i32 @main() {
.entry:
  %call_arg_value = alloca double, align 8
  store double 1.000000e+00, double* %call_arg_value, align 8
  %0 = call double @enorm(double* %call_arg_value)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), double %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)
