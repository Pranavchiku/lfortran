; ModuleID = 'LFortran'
source_filename = "LFortran"

%complex_4 = type { float, float }
%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }
%array.0 = type { float*, i32, %dimension_descriptor*, i1, i32 }
%array.1 = type { %complex_4*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define %complex_4 @reduce_sum_c(%complex_4* %c, i32* %__1c, i32* %__2c, i32* %__3c, i32* %__4c, i32* %__5c, i32* %__6c) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %r = alloca %complex_4, align 8
  %0 = alloca %complex_4, align 8
  %1 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 0
  %2 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 1
  store float 0.000000e+00, float* %1, align 4
  store float 0.000000e+00, float* %2, align 4
  %3 = load %complex_4, %complex_4* %0, align 4
  store %complex_4 %3, %complex_4* %r, align 4
  %4 = load i32, i32* %__1c, align 4
  %5 = sub i32 %4, 1
  store i32 %5, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  %8 = load i32, i32* %__2c, align 4
  %9 = load i32, i32* %__1c, align 4
  %10 = add i32 %8, %9
  %11 = sub i32 %10, 1
  %12 = icmp sle i32 %7, %11
  br i1 %12, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %13 = load i32, i32* %i, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %i, align 4
  %15 = load i32, i32* %__3c, align 4
  %16 = sub i32 %15, 1
  store i32 %16, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %17 = load i32, i32* %j, align 4
  %18 = add i32 %17, 1
  %19 = load i32, i32* %__4c, align 4
  %20 = load i32, i32* %__3c, align 4
  %21 = add i32 %19, %20
  %22 = sub i32 %21, 1
  %23 = icmp sle i32 %18, %22
  br i1 %23, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %24 = load i32, i32* %j, align 4
  %25 = add i32 %24, 1
  store i32 %25, i32* %j, align 4
  %26 = load i32, i32* %__5c, align 4
  %27 = sub i32 %26, 1
  store i32 %27, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %28 = load i32, i32* %k, align 4
  %29 = add i32 %28, 1
  %30 = load i32, i32* %__6c, align 4
  %31 = load i32, i32* %__5c, align 4
  %32 = add i32 %30, %31
  %33 = sub i32 %32, 1
  %34 = icmp sle i32 %29, %33
  br i1 %34, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %35 = load i32, i32* %k, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %k, align 4
  %37 = load %complex_4, %complex_4* %r, align 4
  %38 = load i32, i32* %i, align 4
  %39 = load i32, i32* %j, align 4
  %40 = load i32, i32* %k, align 4
  %41 = load i32, i32* %__1c, align 4
  %42 = load i32, i32* %__2c, align 4
  %43 = load i32, i32* %__3c, align 4
  %44 = load i32, i32* %__4c, align 4
  %45 = load i32, i32* %__5c, align 4
  %46 = load i32, i32* %__6c, align 4
  %47 = sub i32 %38, %41
  %48 = mul i32 1, %47
  %49 = add i32 0, %48
  %50 = mul i32 1, %42
  %51 = sub i32 %39, %43
  %52 = mul i32 %50, %51
  %53 = add i32 %49, %52
  %54 = mul i32 %50, %44
  %55 = sub i32 %40, %45
  %56 = mul i32 %54, %55
  %57 = add i32 %53, %56
  %58 = mul i32 %54, %46
  %59 = getelementptr inbounds %complex_4, %complex_4* %c, i32 %57
  %60 = load %complex_4, %complex_4* %59, align 4
  %61 = alloca %complex_4, align 8
  store %complex_4 %37, %complex_4* %61, align 4
  %62 = alloca %complex_4, align 8
  store %complex_4 %60, %complex_4* %62, align 4
  %63 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add_32(%complex_4* %61, %complex_4* %62, %complex_4* %63)
  %64 = load %complex_4, %complex_4* %63, align 4
  store %complex_4 %64, %complex_4* %r, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  %65 = load i32, i32* %__5c, align 4
  %66 = add i32 %65, 1
  store i32 %66, i32* %k, align 4
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  %67 = load i32, i32* %__3c, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %j, align 4
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %69 = load i32, i32* %__1c, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %i, align 4
  br label %return

return:                                           ; preds = %loop.end6
  %71 = load %complex_4, %complex_4* %r, align 4
  ret %complex_4 %71
}

define void @sum(%array** %a, %array.0** %b, %array.1** %c) {
.entry:
  %c_copy = alloca %array.1*, align 8
  store %array.1* null, %array.1** %c_copy, align 8
  %arr_desc = alloca %array.1, align 8
  %0 = getelementptr %array.1, %array.1* %arr_desc, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 3, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array.1, %array.1* %arr_desc, i32 0, i32 4
  store i32 3, i32* %4, align 4
  %5 = getelementptr %array.1, %array.1* %arr_desc, i32 0, i32 0
  store %complex_4* null, %complex_4** %5, align 8
  store %array.1* %arr_desc, %array.1** %c_copy, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %6 = load %array*, %array** %a, align 8
  %7 = getelementptr %array, %array* %6, i32 0, i32 2
  %8 = load %dimension_descriptor*, %dimension_descriptor** %7, align 8
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = load %array*, %array** %a, align 8
  %13 = getelementptr %array, %array* %12, i32 0, i32 2
  %14 = load %dimension_descriptor*, %dimension_descriptor** %13, align 8
  %15 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %14, i32 0
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, %17
  %21 = sub i32 %20, 1
  %22 = load %array*, %array** %a, align 8
  %23 = getelementptr %array, %array* %22, i32 0, i32 2
  %24 = load %dimension_descriptor*, %dimension_descriptor** %23, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sub i32 %21, %27
  %29 = add i32 %28, 1
  %30 = load %array.0*, %array.0** %b, align 8
  %31 = getelementptr %array.0, %array.0* %30, i32 0, i32 2
  %32 = load %dimension_descriptor*, %dimension_descriptor** %31, align 8
  %33 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %32, i32 0
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = load %array.0*, %array.0** %b, align 8
  %37 = getelementptr %array.0, %array.0* %36, i32 0, i32 2
  %38 = load %dimension_descriptor*, %dimension_descriptor** %37, align 8
  %39 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 0
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, %41
  %45 = sub i32 %44, 1
  %46 = load %array.0*, %array.0** %b, align 8
  %47 = getelementptr %array.0, %array.0* %46, i32 0, i32 2
  %48 = load %dimension_descriptor*, %dimension_descriptor** %47, align 8
  %49 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %48, i32 0
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sub i32 %45, %51
  %53 = add i32 %52, 1
  %54 = load %array.0*, %array.0** %b, align 8
  %55 = getelementptr %array.0, %array.0* %54, i32 0, i32 2
  %56 = load %dimension_descriptor*, %dimension_descriptor** %55, align 8
  %57 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %56, i32 1
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = load %array.0*, %array.0** %b, align 8
  %61 = getelementptr %array.0, %array.0* %60, i32 0, i32 2
  %62 = load %dimension_descriptor*, %dimension_descriptor** %61, align 8
  %63 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %62, i32 1
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %63, i32 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr %dimension_descriptor, %dimension_descriptor* %63, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, %65
  %69 = sub i32 %68, 1
  %70 = load %array.0*, %array.0** %b, align 8
  %71 = getelementptr %array.0, %array.0* %70, i32 0, i32 2
  %72 = load %dimension_descriptor*, %dimension_descriptor** %71, align 8
  %73 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 1
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = sub i32 %69, %75
  %77 = add i32 %76, 1
  %78 = load %array.1*, %array.1** %c_copy, align 8
  %79 = getelementptr %array.1, %array.1* %78, i32 0, i32 1
  store i32 0, i32* %79, align 4
  %80 = getelementptr %array.1, %array.1* %78, i32 0, i32 2
  %81 = load %dimension_descriptor*, %dimension_descriptor** %80, align 8
  %82 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %81, i32 0
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 0
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 1
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 2
  store i32 1, i32* %83, align 4
  store i32 %11, i32* %84, align 4
  store i32 %29, i32* %85, align 4
  %86 = mul i32 1, %29
  %87 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %81, i32 1
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 0
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 1
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 2
  store i32 %86, i32* %88, align 4
  store i32 %35, i32* %89, align 4
  store i32 %53, i32* %90, align 4
  %91 = mul i32 %86, %53
  %92 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %81, i32 2
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 0
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 1
  %95 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 2
  store i32 %91, i32* %93, align 4
  store i32 %59, i32* %94, align 4
  store i32 %77, i32* %95, align 4
  %96 = mul i32 %91, %77
  %97 = getelementptr %array.1, %array.1* %78, i32 0, i32 0
  %98 = alloca i32, align 4
  %99 = mul i32 %96, 8
  store i32 %99, i32* %98, align 4
  %100 = load i32, i32* %98, align 4
  %101 = call i8* (i32, ...) @_lfortran_malloc(i32 %100)
  %102 = bitcast i8* %101 to %complex_4*
  store %complex_4* %102, %complex_4** %97, align 8
  %103 = load %array*, %array** %a, align 8
  %104 = getelementptr %array, %array* %103, i32 0, i32 2
  %105 = load %dimension_descriptor*, %dimension_descriptor** %104, align 8
  %106 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %105, i32 0
  %107 = getelementptr %dimension_descriptor, %dimension_descriptor* %106, i32 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = load %array*, %array** %a, align 8
  %110 = getelementptr %array, %array* %109, i32 0, i32 2
  %111 = load %dimension_descriptor*, %dimension_descriptor** %110, align 8
  %112 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %111, i32 0
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = add i32 %116, %114
  %118 = sub i32 %117, 1
  %119 = load %array*, %array** %a, align 8
  %120 = getelementptr %array, %array* %119, i32 0, i32 2
  %121 = load %dimension_descriptor*, %dimension_descriptor** %120, align 8
  %122 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %121, i32 0
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = sub i32 %118, %124
  %126 = add i32 %125, 1
  %127 = load %array.0*, %array.0** %b, align 8
  %128 = getelementptr %array.0, %array.0* %127, i32 0, i32 2
  %129 = load %dimension_descriptor*, %dimension_descriptor** %128, align 8
  %130 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %129, i32 0
  %131 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = load %array.0*, %array.0** %b, align 8
  %134 = getelementptr %array.0, %array.0* %133, i32 0, i32 2
  %135 = load %dimension_descriptor*, %dimension_descriptor** %134, align 8
  %136 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %135, i32 0
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 2
  %140 = load i32, i32* %139, align 4
  %141 = add i32 %140, %138
  %142 = sub i32 %141, 1
  %143 = load %array.0*, %array.0** %b, align 8
  %144 = getelementptr %array.0, %array.0* %143, i32 0, i32 2
  %145 = load %dimension_descriptor*, %dimension_descriptor** %144, align 8
  %146 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %145, i32 0
  %147 = getelementptr %dimension_descriptor, %dimension_descriptor* %146, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = sub i32 %142, %148
  %150 = add i32 %149, 1
  %151 = load %array.0*, %array.0** %b, align 8
  %152 = getelementptr %array.0, %array.0* %151, i32 0, i32 2
  %153 = load %dimension_descriptor*, %dimension_descriptor** %152, align 8
  %154 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %153, i32 1
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = load %array.0*, %array.0** %b, align 8
  %158 = getelementptr %array.0, %array.0* %157, i32 0, i32 2
  %159 = load %dimension_descriptor*, %dimension_descriptor** %158, align 8
  %160 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %159, i32 1
  %161 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = add i32 %164, %162
  %166 = sub i32 %165, 1
  %167 = load %array.0*, %array.0** %b, align 8
  %168 = getelementptr %array.0, %array.0* %167, i32 0, i32 2
  %169 = load %dimension_descriptor*, %dimension_descriptor** %168, align 8
  %170 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %169, i32 1
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = sub i32 %166, %172
  %174 = add i32 %173, 1
  %175 = load %array.1*, %array.1** %c, align 8
  %176 = getelementptr %array.1, %array.1* %175, i32 0, i32 1
  store i32 0, i32* %176, align 4
  %177 = getelementptr %array.1, %array.1* %175, i32 0, i32 2
  %178 = load %dimension_descriptor*, %dimension_descriptor** %177, align 8
  %179 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %178, i32 0
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 0
  %181 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 1
  %182 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 2
  store i32 1, i32* %180, align 4
  store i32 %108, i32* %181, align 4
  store i32 %126, i32* %182, align 4
  %183 = mul i32 1, %126
  %184 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %178, i32 1
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 0
  %186 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 1
  %187 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 2
  store i32 %183, i32* %185, align 4
  store i32 %132, i32* %186, align 4
  store i32 %150, i32* %187, align 4
  %188 = mul i32 %183, %150
  %189 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %178, i32 2
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 0
  %191 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 1
  %192 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 2
  store i32 %188, i32* %190, align 4
  store i32 %156, i32* %191, align 4
  store i32 %174, i32* %192, align 4
  %193 = mul i32 %188, %174
  %194 = getelementptr %array.1, %array.1* %175, i32 0, i32 0
  %195 = alloca i32, align 4
  %196 = mul i32 %193, 8
  store i32 %196, i32* %195, align 4
  %197 = load i32, i32* %195, align 4
  %198 = call i8* (i32, ...) @_lfortran_malloc(i32 %197)
  %199 = bitcast i8* %198 to %complex_4*
  store %complex_4* %199, %complex_4** %194, align 8
  %200 = load %array*, %array** %a, align 8
  %201 = getelementptr %array, %array* %200, i32 0, i32 2
  %202 = load %dimension_descriptor*, %dimension_descriptor** %201, align 8
  %203 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %202, i32 0
  %204 = getelementptr %dimension_descriptor, %dimension_descriptor* %203, i32 0, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = sub i32 %205, 1
  store i32 %206, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %207 = load i32, i32* %i, align 4
  %208 = add i32 %207, 1
  %209 = load %array*, %array** %a, align 8
  %210 = getelementptr %array, %array* %209, i32 0, i32 2
  %211 = load %dimension_descriptor*, %dimension_descriptor** %210, align 8
  %212 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %211, i32 0
  %213 = getelementptr %dimension_descriptor, %dimension_descriptor* %212, i32 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %212, i32 0, i32 2
  %216 = load i32, i32* %215, align 4
  %217 = add i32 %216, %214
  %218 = sub i32 %217, 1
  %219 = icmp sle i32 %208, %218
  br i1 %219, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %220 = load i32, i32* %i, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %i, align 4
  %222 = load %array.0*, %array.0** %b, align 8
  %223 = getelementptr %array.0, %array.0* %222, i32 0, i32 2
  %224 = load %dimension_descriptor*, %dimension_descriptor** %223, align 8
  %225 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %224, i32 0
  %226 = getelementptr %dimension_descriptor, %dimension_descriptor* %225, i32 0, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = sub i32 %227, 1
  store i32 %228, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %229 = load i32, i32* %j, align 4
  %230 = add i32 %229, 1
  %231 = load %array.0*, %array.0** %b, align 8
  %232 = getelementptr %array.0, %array.0* %231, i32 0, i32 2
  %233 = load %dimension_descriptor*, %dimension_descriptor** %232, align 8
  %234 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %233, i32 0
  %235 = getelementptr %dimension_descriptor, %dimension_descriptor* %234, i32 0, i32 1
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr %dimension_descriptor, %dimension_descriptor* %234, i32 0, i32 2
  %238 = load i32, i32* %237, align 4
  %239 = add i32 %238, %236
  %240 = sub i32 %239, 1
  %241 = icmp sle i32 %230, %240
  br i1 %241, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %242 = load i32, i32* %j, align 4
  %243 = add i32 %242, 1
  store i32 %243, i32* %j, align 4
  %244 = load %array.0*, %array.0** %b, align 8
  %245 = getelementptr %array.0, %array.0* %244, i32 0, i32 2
  %246 = load %dimension_descriptor*, %dimension_descriptor** %245, align 8
  %247 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %246, i32 1
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %247, i32 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = sub i32 %249, 1
  store i32 %250, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %251 = load i32, i32* %k, align 4
  %252 = add i32 %251, 1
  %253 = load %array.0*, %array.0** %b, align 8
  %254 = getelementptr %array.0, %array.0* %253, i32 0, i32 2
  %255 = load %dimension_descriptor*, %dimension_descriptor** %254, align 8
  %256 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %255, i32 1
  %257 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 2
  %260 = load i32, i32* %259, align 4
  %261 = add i32 %260, %258
  %262 = sub i32 %261, 1
  %263 = icmp sle i32 %252, %262
  br i1 %263, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %264 = load i32, i32* %k, align 4
  %265 = add i32 %264, 1
  store i32 %265, i32* %k, align 4
  %266 = load i32, i32* %i, align 4
  %267 = load i32, i32* %j, align 4
  %268 = load i32, i32* %k, align 4
  %269 = load %array.1*, %array.1** %c_copy, align 8
  %270 = getelementptr %array.1, %array.1* %269, i32 0, i32 2
  %271 = load %dimension_descriptor*, %dimension_descriptor** %270, align 8
  %272 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %271, i32 0
  %273 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = sub i32 %266, %274
  %276 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 0
  %277 = load i32, i32* %276, align 4
  %278 = mul i32 %277, %275
  %279 = add i32 0, %278
  %280 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %271, i32 1
  %281 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 1
  %282 = load i32, i32* %281, align 4
  %283 = sub i32 %267, %282
  %284 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 0
  %285 = load i32, i32* %284, align 4
  %286 = mul i32 %285, %283
  %287 = add i32 %279, %286
  %288 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %271, i32 2
  %289 = getelementptr %dimension_descriptor, %dimension_descriptor* %288, i32 0, i32 1
  %290 = load i32, i32* %289, align 4
  %291 = sub i32 %268, %290
  %292 = getelementptr %dimension_descriptor, %dimension_descriptor* %288, i32 0, i32 0
  %293 = load i32, i32* %292, align 4
  %294 = mul i32 %293, %291
  %295 = add i32 %287, %294
  %296 = getelementptr %array.1, %array.1* %269, i32 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = add i32 %295, %297
  %299 = getelementptr %array.1, %array.1* %269, i32 0, i32 0
  %300 = load %complex_4*, %complex_4** %299, align 8
  %301 = getelementptr inbounds %complex_4, %complex_4* %300, i32 %298
  %302 = load i32, i32* %i, align 4
  %303 = load %array*, %array** %a, align 8
  %304 = getelementptr %array, %array* %303, i32 0, i32 2
  %305 = load %dimension_descriptor*, %dimension_descriptor** %304, align 8
  %306 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %305, i32 0
  %307 = getelementptr %dimension_descriptor, %dimension_descriptor* %306, i32 0, i32 1
  %308 = load i32, i32* %307, align 4
  %309 = sub i32 %302, %308
  %310 = getelementptr %dimension_descriptor, %dimension_descriptor* %306, i32 0, i32 0
  %311 = load i32, i32* %310, align 4
  %312 = mul i32 %311, %309
  %313 = add i32 0, %312
  %314 = getelementptr %array, %array* %303, i32 0, i32 1
  %315 = load i32, i32* %314, align 4
  %316 = add i32 %313, %315
  %317 = getelementptr %array, %array* %303, i32 0, i32 0
  %318 = load i32*, i32** %317, align 8
  %319 = getelementptr inbounds i32, i32* %318, i32 %316
  %320 = load i32, i32* %319, align 4
  %321 = sitofp i32 %320 to float
  %322 = load i32, i32* %j, align 4
  %323 = load i32, i32* %k, align 4
  %324 = load %array.0*, %array.0** %b, align 8
  %325 = getelementptr %array.0, %array.0* %324, i32 0, i32 2
  %326 = load %dimension_descriptor*, %dimension_descriptor** %325, align 8
  %327 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %326, i32 0
  %328 = getelementptr %dimension_descriptor, %dimension_descriptor* %327, i32 0, i32 1
  %329 = load i32, i32* %328, align 4
  %330 = sub i32 %322, %329
  %331 = getelementptr %dimension_descriptor, %dimension_descriptor* %327, i32 0, i32 0
  %332 = load i32, i32* %331, align 4
  %333 = mul i32 %332, %330
  %334 = add i32 0, %333
  %335 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %326, i32 1
  %336 = getelementptr %dimension_descriptor, %dimension_descriptor* %335, i32 0, i32 1
  %337 = load i32, i32* %336, align 4
  %338 = sub i32 %323, %337
  %339 = getelementptr %dimension_descriptor, %dimension_descriptor* %335, i32 0, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = mul i32 %340, %338
  %342 = add i32 %334, %341
  %343 = getelementptr %array.0, %array.0* %324, i32 0, i32 1
  %344 = load i32, i32* %343, align 4
  %345 = add i32 %342, %344
  %346 = getelementptr %array.0, %array.0* %324, i32 0, i32 0
  %347 = load float*, float** %346, align 8
  %348 = getelementptr inbounds float, float* %347, i32 %345
  %349 = load float, float* %348, align 4
  %350 = fadd float %321, %349
  %351 = alloca %complex_4, align 8
  %352 = getelementptr %complex_4, %complex_4* %351, i32 0, i32 0
  %353 = getelementptr %complex_4, %complex_4* %351, i32 0, i32 1
  store float %350, float* %352, align 4
  store float 0.000000e+00, float* %353, align 4
  %354 = load %complex_4, %complex_4* %351, align 4
  store %complex_4 %354, %complex_4* %301, align 4
  %355 = load i32, i32* %i, align 4
  %356 = load i32, i32* %j, align 4
  %357 = load i32, i32* %k, align 4
  %358 = load %array.1*, %array.1** %c, align 8
  %359 = getelementptr %array.1, %array.1* %358, i32 0, i32 2
  %360 = load %dimension_descriptor*, %dimension_descriptor** %359, align 8
  %361 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %360, i32 0
  %362 = getelementptr %dimension_descriptor, %dimension_descriptor* %361, i32 0, i32 1
  %363 = load i32, i32* %362, align 4
  %364 = sub i32 %355, %363
  %365 = getelementptr %dimension_descriptor, %dimension_descriptor* %361, i32 0, i32 0
  %366 = load i32, i32* %365, align 4
  %367 = mul i32 %366, %364
  %368 = add i32 0, %367
  %369 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %360, i32 1
  %370 = getelementptr %dimension_descriptor, %dimension_descriptor* %369, i32 0, i32 1
  %371 = load i32, i32* %370, align 4
  %372 = sub i32 %356, %371
  %373 = getelementptr %dimension_descriptor, %dimension_descriptor* %369, i32 0, i32 0
  %374 = load i32, i32* %373, align 4
  %375 = mul i32 %374, %372
  %376 = add i32 %368, %375
  %377 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %360, i32 2
  %378 = getelementptr %dimension_descriptor, %dimension_descriptor* %377, i32 0, i32 1
  %379 = load i32, i32* %378, align 4
  %380 = sub i32 %357, %379
  %381 = getelementptr %dimension_descriptor, %dimension_descriptor* %377, i32 0, i32 0
  %382 = load i32, i32* %381, align 4
  %383 = mul i32 %382, %380
  %384 = add i32 %376, %383
  %385 = getelementptr %array.1, %array.1* %358, i32 0, i32 1
  %386 = load i32, i32* %385, align 4
  %387 = add i32 %384, %386
  %388 = getelementptr %array.1, %array.1* %358, i32 0, i32 0
  %389 = load %complex_4*, %complex_4** %388, align 8
  %390 = getelementptr inbounds %complex_4, %complex_4* %389, i32 %387
  %391 = load i32, i32* %i, align 4
  %392 = load %array*, %array** %a, align 8
  %393 = getelementptr %array, %array* %392, i32 0, i32 2
  %394 = load %dimension_descriptor*, %dimension_descriptor** %393, align 8
  %395 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %394, i32 0
  %396 = getelementptr %dimension_descriptor, %dimension_descriptor* %395, i32 0, i32 1
  %397 = load i32, i32* %396, align 4
  %398 = sub i32 %391, %397
  %399 = getelementptr %dimension_descriptor, %dimension_descriptor* %395, i32 0, i32 0
  %400 = load i32, i32* %399, align 4
  %401 = mul i32 %400, %398
  %402 = add i32 0, %401
  %403 = getelementptr %array, %array* %392, i32 0, i32 1
  %404 = load i32, i32* %403, align 4
  %405 = add i32 %402, %404
  %406 = getelementptr %array, %array* %392, i32 0, i32 0
  %407 = load i32*, i32** %406, align 8
  %408 = getelementptr inbounds i32, i32* %407, i32 %405
  %409 = load i32, i32* %408, align 4
  %410 = sitofp i32 %409 to float
  %411 = load i32, i32* %j, align 4
  %412 = load i32, i32* %k, align 4
  %413 = load %array.0*, %array.0** %b, align 8
  %414 = getelementptr %array.0, %array.0* %413, i32 0, i32 2
  %415 = load %dimension_descriptor*, %dimension_descriptor** %414, align 8
  %416 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %415, i32 0
  %417 = getelementptr %dimension_descriptor, %dimension_descriptor* %416, i32 0, i32 1
  %418 = load i32, i32* %417, align 4
  %419 = sub i32 %411, %418
  %420 = getelementptr %dimension_descriptor, %dimension_descriptor* %416, i32 0, i32 0
  %421 = load i32, i32* %420, align 4
  %422 = mul i32 %421, %419
  %423 = add i32 0, %422
  %424 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %415, i32 1
  %425 = getelementptr %dimension_descriptor, %dimension_descriptor* %424, i32 0, i32 1
  %426 = load i32, i32* %425, align 4
  %427 = sub i32 %412, %426
  %428 = getelementptr %dimension_descriptor, %dimension_descriptor* %424, i32 0, i32 0
  %429 = load i32, i32* %428, align 4
  %430 = mul i32 %429, %427
  %431 = add i32 %423, %430
  %432 = getelementptr %array.0, %array.0* %413, i32 0, i32 1
  %433 = load i32, i32* %432, align 4
  %434 = add i32 %431, %433
  %435 = getelementptr %array.0, %array.0* %413, i32 0, i32 0
  %436 = load float*, float** %435, align 8
  %437 = getelementptr inbounds float, float* %436, i32 %434
  %438 = load float, float* %437, align 4
  %439 = fadd float %410, %438
  %440 = alloca %complex_4, align 8
  %441 = getelementptr %complex_4, %complex_4* %440, i32 0, i32 0
  %442 = getelementptr %complex_4, %complex_4* %440, i32 0, i32 1
  store float %439, float* %441, align 4
  store float 0.000000e+00, float* %442, align 4
  %443 = load %complex_4, %complex_4* %440, align 4
  store %complex_4 %443, %complex_4* %390, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  %444 = load %array.0*, %array.0** %b, align 8
  %445 = getelementptr %array.0, %array.0* %444, i32 0, i32 2
  %446 = load %dimension_descriptor*, %dimension_descriptor** %445, align 8
  %447 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %446, i32 1
  %448 = getelementptr %dimension_descriptor, %dimension_descriptor* %447, i32 0, i32 1
  %449 = load i32, i32* %448, align 4
  %450 = add i32 %449, 1
  store i32 %450, i32* %k, align 4
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  %451 = load %array.0*, %array.0** %b, align 8
  %452 = getelementptr %array.0, %array.0* %451, i32 0, i32 2
  %453 = load %dimension_descriptor*, %dimension_descriptor** %452, align 8
  %454 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %453, i32 0
  %455 = getelementptr %dimension_descriptor, %dimension_descriptor* %454, i32 0, i32 1
  %456 = load i32, i32* %455, align 4
  %457 = add i32 %456, 1
  store i32 %457, i32* %j, align 4
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %458 = load %array*, %array** %a, align 8
  %459 = getelementptr %array, %array* %458, i32 0, i32 2
  %460 = load %dimension_descriptor*, %dimension_descriptor** %459, align 8
  %461 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %460, i32 0
  %462 = getelementptr %dimension_descriptor, %dimension_descriptor* %461, i32 0, i32 1
  %463 = load i32, i32* %462, align 4
  %464 = add i32 %463, 1
  store i32 %464, i32* %i, align 4
  %465 = load %array.1*, %array.1** %c_copy, align 8
  %466 = getelementptr %array.1, %array.1* %465, i32 0, i32 0
  %467 = load %complex_4*, %complex_4** %466, align 8
  %468 = ptrtoint %complex_4* %467 to i64
  %469 = icmp ne i64 %468, 0
  br i1 %469, label %then, label %else

then:                                             ; preds = %loop.end6
  %470 = getelementptr %array.1, %array.1* %465, i32 0, i32 0
  %471 = load %complex_4*, %complex_4** %470, align 8
  %472 = alloca i8*, align 8
  %473 = bitcast %complex_4* %471 to i8*
  store i8* %473, i8** %472, align 8
  %474 = load i8*, i8** %472, align 8
  call void (i8*, ...) @_lfortran_free(i8* %474)
  %475 = getelementptr %array.1, %array.1* %465, i32 0, i32 0
  store %complex_4* null, %complex_4** %475, align 8
  br label %ifcont

else:                                             ; preds = %loop.end6
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %476 = load %array.1*, %array.1** %c_copy, align 8
  %477 = getelementptr %array.1, %array.1* %476, i32 0, i32 0
  %478 = load %complex_4*, %complex_4** %477, align 8
  %479 = ptrtoint %complex_4* %478 to i64
  %480 = icmp ne i64 %479, 0
  br i1 %480, label %then7, label %else8

then7:                                            ; preds = %ifcont
  %481 = getelementptr %array.1, %array.1* %476, i32 0, i32 0
  %482 = load %complex_4*, %complex_4** %481, align 8
  %483 = alloca i8*, align 8
  %484 = bitcast %complex_4* %482 to i8*
  store i8* %484, i8** %483, align 8
  %485 = load i8*, i8** %483, align 8
  call void (i8*, ...) @_lfortran_free(i8* %485)
  %486 = getelementptr %array.1, %array.1* %476, i32 0, i32 0
  store %complex_4* null, %complex_4** %486, align 8
  br label %ifcont9

else8:                                            ; preds = %ifcont
  br label %ifcont9

ifcont9:                                          ; preds = %else8, %then7
  br label %return

return:                                           ; preds = %ifcont9
  ret void
}

declare void @_lfortran_complex_add_32(%complex_4*, %complex_4*, %complex_4*, ...)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)

define i32 @main(i32 %0, i8** %1) {
.entry:
  %call_arg_value70 = alloca i32, align 4
  %call_arg_value69 = alloca i32, align 4
  %call_arg_value68 = alloca i32, align 4
  %call_arg_value67 = alloca i32, align 4
  %call_arg_value66 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %a = alloca %array*, align 8
  store %array* null, %array** %a, align 8
  %arr_desc = alloca %array, align 8
  %2 = getelementptr %array, %array* %arr_desc, i32 0, i32 2
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = alloca %dimension_descriptor, i32 %4, align 8
  store %dimension_descriptor* %5, %dimension_descriptor** %2, align 8
  %6 = getelementptr %array, %array* %arr_desc, i32 0, i32 4
  store i32 1, i32* %6, align 4
  %7 = getelementptr %array, %array* %arr_desc, i32 0, i32 0
  store i32* null, i32** %7, align 8
  store %array* %arr_desc, %array** %a, align 8
  %b = alloca %array.0*, align 8
  store %array.0* null, %array.0** %b, align 8
  %arr_desc1 = alloca %array.0, align 8
  %8 = getelementptr %array.0, %array.0* %arr_desc1, i32 0, i32 2
  %9 = alloca i32, align 4
  store i32 2, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = alloca %dimension_descriptor, i32 %10, align 8
  store %dimension_descriptor* %11, %dimension_descriptor** %8, align 8
  %12 = getelementptr %array.0, %array.0* %arr_desc1, i32 0, i32 4
  store i32 2, i32* %12, align 4
  %13 = getelementptr %array.0, %array.0* %arr_desc1, i32 0, i32 0
  store float* null, float** %13, align 8
  store %array.0* %arr_desc1, %array.0** %b, align 8
  %c = alloca %array.1*, align 8
  store %array.1* null, %array.1** %c, align 8
  %arr_desc2 = alloca %array.1, align 8
  %14 = getelementptr %array.1, %array.1* %arr_desc2, i32 0, i32 2
  %15 = alloca i32, align 4
  store i32 3, i32* %15, align 4
  %16 = load i32, i32* %15, align 4
  %17 = alloca %dimension_descriptor, i32 %16, align 8
  store %dimension_descriptor* %17, %dimension_descriptor** %14, align 8
  %18 = getelementptr %array.1, %array.1* %arr_desc2, i32 0, i32 4
  store i32 3, i32* %18, align 4
  %19 = getelementptr %array.1, %array.1* %arr_desc2, i32 0, i32 0
  store %complex_4* null, %complex_4** %19, align 8
  store %array.1* %arr_desc2, %array.1** %c, align 8
  %i = alloca i32, align 4
  %ierr = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %r = alloca %complex_4, align 8
  store i32 10, i32* %n, align 4
  %20 = load i32, i32* %n, align 4
  %21 = add i32 %20, 1
  %22 = load %array*, %array** %a, align 8
  %23 = getelementptr %array, %array* %22, i32 0, i32 1
  store i32 0, i32* %23, align 4
  %24 = getelementptr %array, %array* %22, i32 0, i32 2
  %25 = load %dimension_descriptor*, %dimension_descriptor** %24, align 8
  %26 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %25, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 1
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 2
  store i32 1, i32* %27, align 4
  store i32 5, i32* %28, align 4
  store i32 %21, i32* %29, align 4
  %30 = mul i32 1, %21
  %31 = getelementptr %array, %array* %22, i32 0, i32 0
  %32 = alloca i32, align 4
  %33 = mul i32 %30, 4
  store i32 %33, i32* %32, align 4
  %34 = load i32, i32* %32, align 4
  %35 = call i8* (i32, ...) @_lfortran_malloc(i32 %34)
  %36 = bitcast i8* %35 to i32*
  store i32* %36, i32** %31, align 8
  %37 = load i32, i32* %n, align 4
  %38 = load i32, i32* %n, align 4
  %39 = mul i32 2, %38
  %40 = load i32, i32* %n, align 4
  %41 = sub i32 %39, %40
  %42 = add i32 %41, 1
  %43 = load i32, i32* %n, align 4
  %44 = load i32, i32* %n, align 4
  %45 = mul i32 3, %44
  %46 = load i32, i32* %n, align 4
  %47 = sub i32 %45, %46
  %48 = add i32 %47, 1
  %49 = load %array.0*, %array.0** %b, align 8
  %50 = getelementptr %array.0, %array.0* %49, i32 0, i32 1
  store i32 0, i32* %50, align 4
  %51 = getelementptr %array.0, %array.0* %49, i32 0, i32 2
  %52 = load %dimension_descriptor*, %dimension_descriptor** %51, align 8
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 0
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 0
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 2
  store i32 1, i32* %54, align 4
  store i32 %37, i32* %55, align 4
  store i32 %42, i32* %56, align 4
  %57 = mul i32 1, %42
  %58 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 1
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 2
  store i32 %57, i32* %59, align 4
  store i32 %43, i32* %60, align 4
  store i32 %48, i32* %61, align 4
  %62 = mul i32 %57, %48
  %63 = getelementptr %array.0, %array.0* %49, i32 0, i32 0
  %64 = alloca i32, align 4
  %65 = mul i32 %62, 4
  store i32 %65, i32* %64, align 4
  %66 = load i32, i32* %64, align 4
  %67 = call i8* (i32, ...) @_lfortran_malloc(i32 %66)
  %68 = bitcast i8* %67 to float*
  store float* %68, float** %63, align 8
  store i32 0, i32* %ierr, align 4
  %69 = load %array*, %array** %a, align 8
  %70 = getelementptr %array, %array* %69, i32 0, i32 2
  %71 = load %dimension_descriptor*, %dimension_descriptor** %70, align 8
  %72 = getelementptr %array, %array* %69, i32 0, i32 4
  %73 = load i32, i32* %72, align 4
  %74 = alloca i32, align 4
  store i32 1, i32* %74, align 4
  %75 = alloca i32, align 4
  store i32 0, i32* %75, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %76 = load i32, i32* %75, align 4
  %77 = icmp slt i32 %76, %73
  br i1 %77, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %78 = load i32, i32* %75, align 4
  %79 = load i32, i32* %74, align 4
  %80 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %71, i32 %78
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %80, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = mul i32 %79, %82
  store i32 %83, i32* %74, align 4
  %84 = add i32 %78, 1
  store i32 %84, i32* %75, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %85 = load i32, i32* %74, align 4
  %86 = load i32, i32* %n, align 4
  %87 = add i32 %86, 1
  %88 = icmp ne i32 %85, %87
  br i1 %88, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %89 = load %array.0*, %array.0** %b, align 8
  %90 = getelementptr %array.0, %array.0* %89, i32 0, i32 2
  %91 = load %dimension_descriptor*, %dimension_descriptor** %90, align 8
  %92 = getelementptr %array.0, %array.0* %89, i32 0, i32 4
  %93 = load i32, i32* %92, align 4
  %94 = alloca i32, align 4
  store i32 1, i32* %94, align 4
  %95 = alloca i32, align 4
  store i32 0, i32* %95, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %ifcont
  %96 = load i32, i32* %95, align 4
  %97 = icmp slt i32 %96, %93
  br i1 %97, label %loop.body4, label %loop.end5

loop.body4:                                       ; preds = %loop.head3
  %98 = load i32, i32* %95, align 4
  %99 = load i32, i32* %94, align 4
  %100 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %91, i32 %98
  %101 = getelementptr %dimension_descriptor, %dimension_descriptor* %100, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = mul i32 %99, %102
  store i32 %103, i32* %94, align 4
  %104 = add i32 %98, 1
  store i32 %104, i32* %95, align 4
  br label %loop.head3

loop.end5:                                        ; preds = %loop.head3
  %105 = load i32, i32* %94, align 4
  %106 = load i32, i32* %n, align 4
  %107 = add i32 %106, 1
  %108 = load i32, i32* %n, align 4
  %109 = mul i32 2, %108
  %110 = add i32 %109, 1
  %111 = mul i32 %107, %110
  %112 = icmp ne i32 %105, %111
  br i1 %112, label %then6, label %else7

then6:                                            ; preds = %loop.end5
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont8

else7:                                            ; preds = %loop.end5
  br label %ifcont8

ifcont8:                                          ; preds = %else7, %then6
  %113 = load %array*, %array** %a, align 8
  %114 = getelementptr %array, %array* %113, i32 0, i32 2
  %115 = load %dimension_descriptor*, %dimension_descriptor** %114, align 8
  %116 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %115, i32 0
  %117 = getelementptr %dimension_descriptor, %dimension_descriptor* %116, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = sub i32 %118, 1
  store i32 %119, i32* %i, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %ifcont8
  %120 = load i32, i32* %i, align 4
  %121 = add i32 %120, 1
  %122 = load %array*, %array** %a, align 8
  %123 = getelementptr %array, %array* %122, i32 0, i32 2
  %124 = load %dimension_descriptor*, %dimension_descriptor** %123, align 8
  %125 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %124, i32 0
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %125, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %125, i32 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, %127
  %131 = sub i32 %130, 1
  %132 = icmp sle i32 %121, %131
  br i1 %132, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %loop.head9
  %133 = load i32, i32* %i, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %i, align 4
  %135 = load i32, i32* %i, align 4
  %136 = load %array*, %array** %a, align 8
  %137 = getelementptr %array, %array* %136, i32 0, i32 2
  %138 = load %dimension_descriptor*, %dimension_descriptor** %137, align 8
  %139 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %138, i32 0
  %140 = getelementptr %dimension_descriptor, %dimension_descriptor* %139, i32 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = sub i32 %135, %141
  %143 = getelementptr %dimension_descriptor, %dimension_descriptor* %139, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = mul i32 %144, %142
  %146 = add i32 0, %145
  %147 = getelementptr %array, %array* %136, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = add i32 %146, %148
  %150 = getelementptr %array, %array* %136, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = getelementptr inbounds i32, i32* %151, i32 %149
  %153 = load i32, i32* %i, align 4
  store i32 %153, i32* %152, align 4
  br label %loop.head9

loop.end11:                                       ; preds = %loop.head9
  %154 = load %array*, %array** %a, align 8
  %155 = getelementptr %array, %array* %154, i32 0, i32 2
  %156 = load %dimension_descriptor*, %dimension_descriptor** %155, align 8
  %157 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 0
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = add i32 %159, 1
  store i32 %160, i32* %i, align 4
  %161 = load %array.0*, %array.0** %b, align 8
  %162 = getelementptr %array.0, %array.0* %161, i32 0, i32 2
  %163 = load %dimension_descriptor*, %dimension_descriptor** %162, align 8
  %164 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %163, i32 0
  %165 = getelementptr %dimension_descriptor, %dimension_descriptor* %164, i32 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = sub i32 %166, 1
  store i32 %167, i32* %i, align 4
  br label %loop.head12

loop.head12:                                      ; preds = %loop.end16, %loop.end11
  %168 = load i32, i32* %i, align 4
  %169 = add i32 %168, 1
  %170 = load %array.0*, %array.0** %b, align 8
  %171 = getelementptr %array.0, %array.0* %170, i32 0, i32 2
  %172 = load %dimension_descriptor*, %dimension_descriptor** %171, align 8
  %173 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %172, i32 0
  %174 = getelementptr %dimension_descriptor, %dimension_descriptor* %173, i32 0, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %173, i32 0, i32 2
  %177 = load i32, i32* %176, align 4
  %178 = add i32 %177, %175
  %179 = sub i32 %178, 1
  %180 = icmp sle i32 %169, %179
  br i1 %180, label %loop.body13, label %loop.end17

loop.body13:                                      ; preds = %loop.head12
  %181 = load i32, i32* %i, align 4
  %182 = add i32 %181, 1
  store i32 %182, i32* %i, align 4
  %183 = load %array.0*, %array.0** %b, align 8
  %184 = getelementptr %array.0, %array.0* %183, i32 0, i32 2
  %185 = load %dimension_descriptor*, %dimension_descriptor** %184, align 8
  %186 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %185, i32 1
  %187 = getelementptr %dimension_descriptor, %dimension_descriptor* %186, i32 0, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = sub i32 %188, 1
  store i32 %189, i32* %j, align 4
  br label %loop.head14

loop.head14:                                      ; preds = %loop.body15, %loop.body13
  %190 = load i32, i32* %j, align 4
  %191 = add i32 %190, 1
  %192 = load %array.0*, %array.0** %b, align 8
  %193 = getelementptr %array.0, %array.0* %192, i32 0, i32 2
  %194 = load %dimension_descriptor*, %dimension_descriptor** %193, align 8
  %195 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %194, i32 1
  %196 = getelementptr %dimension_descriptor, %dimension_descriptor* %195, i32 0, i32 1
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr %dimension_descriptor, %dimension_descriptor* %195, i32 0, i32 2
  %199 = load i32, i32* %198, align 4
  %200 = add i32 %199, %197
  %201 = sub i32 %200, 1
  %202 = icmp sle i32 %191, %201
  br i1 %202, label %loop.body15, label %loop.end16

loop.body15:                                      ; preds = %loop.head14
  %203 = load i32, i32* %j, align 4
  %204 = add i32 %203, 1
  store i32 %204, i32* %j, align 4
  %205 = load i32, i32* %i, align 4
  %206 = load i32, i32* %j, align 4
  %207 = load %array.0*, %array.0** %b, align 8
  %208 = getelementptr %array.0, %array.0* %207, i32 0, i32 2
  %209 = load %dimension_descriptor*, %dimension_descriptor** %208, align 8
  %210 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %209, i32 0
  %211 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = sub i32 %205, %212
  %214 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = mul i32 %215, %213
  %217 = add i32 0, %216
  %218 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %209, i32 1
  %219 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = sub i32 %206, %220
  %222 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = mul i32 %223, %221
  %225 = add i32 %217, %224
  %226 = getelementptr %array.0, %array.0* %207, i32 0, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = add i32 %225, %227
  %229 = getelementptr %array.0, %array.0* %207, i32 0, i32 0
  %230 = load float*, float** %229, align 8
  %231 = getelementptr inbounds float, float* %230, i32 %228
  %232 = load i32, i32* %i, align 4
  %233 = load i32, i32* %j, align 4
  %234 = add i32 %232, %233
  %235 = sitofp i32 %234 to float
  store float %235, float* %231, align 4
  br label %loop.head14

loop.end16:                                       ; preds = %loop.head14
  %236 = load %array.0*, %array.0** %b, align 8
  %237 = getelementptr %array.0, %array.0* %236, i32 0, i32 2
  %238 = load %dimension_descriptor*, %dimension_descriptor** %237, align 8
  %239 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %238, i32 1
  %240 = getelementptr %dimension_descriptor, %dimension_descriptor* %239, i32 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = add i32 %241, 1
  store i32 %242, i32* %j, align 4
  br label %loop.head12

loop.end17:                                       ; preds = %loop.head12
  %243 = load %array.0*, %array.0** %b, align 8
  %244 = getelementptr %array.0, %array.0* %243, i32 0, i32 2
  %245 = load %dimension_descriptor*, %dimension_descriptor** %244, align 8
  %246 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %245, i32 0
  %247 = getelementptr %dimension_descriptor, %dimension_descriptor* %246, i32 0, i32 1
  %248 = load i32, i32* %247, align 4
  %249 = add i32 %248, 1
  store i32 %249, i32* %i, align 4
  %250 = load %array.1*, %array.1** %c, align 8
  %251 = getelementptr %array.1, %array.1* %250, i32 0, i32 0
  %252 = load %complex_4*, %complex_4** %251, align 8
  %253 = ptrtoint %complex_4* %252 to i64
  %254 = icmp ne i64 %253, 0
  br i1 %254, label %then18, label %else19

then18:                                           ; preds = %loop.end17
  %255 = getelementptr %array.1, %array.1* %250, i32 0, i32 0
  %256 = load %complex_4*, %complex_4** %255, align 8
  %257 = alloca i8*, align 8
  %258 = bitcast %complex_4* %256 to i8*
  store i8* %258, i8** %257, align 8
  %259 = load i8*, i8** %257, align 8
  call void (i8*, ...) @_lfortran_free(i8* %259)
  %260 = getelementptr %array.1, %array.1* %250, i32 0, i32 0
  store %complex_4* null, %complex_4** %260, align 8
  br label %ifcont20

else19:                                           ; preds = %loop.end17
  br label %ifcont20

ifcont20:                                         ; preds = %else19, %then18
  call void @sum(%array** %a, %array.0** %b, %array.1** %c)
  %261 = load %array.1*, %array.1** %c, align 8
  %262 = getelementptr %array.1, %array.1* %261, i32 0, i32 2
  %263 = load %dimension_descriptor*, %dimension_descriptor** %262, align 8
  %264 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %263, i32 0
  %265 = getelementptr %dimension_descriptor, %dimension_descriptor* %264, i32 0, i32 1
  %266 = load i32, i32* %265, align 4
  %267 = icmp ne i32 %266, 5
  %268 = load %array.1*, %array.1** %c, align 8
  %269 = getelementptr %array.1, %array.1* %268, i32 0, i32 2
  %270 = load %dimension_descriptor*, %dimension_descriptor** %269, align 8
  %271 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %270, i32 0
  %272 = getelementptr %dimension_descriptor, %dimension_descriptor* %271, i32 0, i32 1
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr %dimension_descriptor, %dimension_descriptor* %271, i32 0, i32 2
  %275 = load i32, i32* %274, align 4
  %276 = add i32 %275, %273
  %277 = sub i32 %276, 1
  %278 = load i32, i32* %n, align 4
  %279 = add i32 %278, 5
  %280 = icmp ne i32 %277, %279
  %281 = icmp eq i1 %267, false
  %282 = alloca i1, align 1
  br i1 %281, label %then21, label %else22

then21:                                           ; preds = %ifcont20
  store i1 %280, i1* %282, align 1
  br label %ifcont23

else22:                                           ; preds = %ifcont20
  store i1 %267, i1* %282, align 1
  br label %ifcont23

ifcont23:                                         ; preds = %else22, %then21
  %283 = load i1, i1* %282, align 1
  br i1 %283, label %then24, label %else25

then24:                                           ; preds = %ifcont23
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %ifcont23
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  %284 = load %array.1*, %array.1** %c, align 8
  %285 = getelementptr %array.1, %array.1* %284, i32 0, i32 2
  %286 = load %dimension_descriptor*, %dimension_descriptor** %285, align 8
  %287 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %286, i32 1
  %288 = getelementptr %dimension_descriptor, %dimension_descriptor* %287, i32 0, i32 1
  %289 = load i32, i32* %288, align 4
  %290 = load i32, i32* %n, align 4
  %291 = icmp ne i32 %289, %290
  %292 = load %array.1*, %array.1** %c, align 8
  %293 = getelementptr %array.1, %array.1* %292, i32 0, i32 2
  %294 = load %dimension_descriptor*, %dimension_descriptor** %293, align 8
  %295 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %294, i32 1
  %296 = getelementptr %dimension_descriptor, %dimension_descriptor* %295, i32 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = getelementptr %dimension_descriptor, %dimension_descriptor* %295, i32 0, i32 2
  %299 = load i32, i32* %298, align 4
  %300 = add i32 %299, %297
  %301 = sub i32 %300, 1
  %302 = load i32, i32* %n, align 4
  %303 = mul i32 2, %302
  %304 = icmp ne i32 %301, %303
  %305 = icmp eq i1 %291, false
  %306 = alloca i1, align 1
  br i1 %305, label %then27, label %else28

then27:                                           ; preds = %ifcont26
  store i1 %304, i1* %306, align 1
  br label %ifcont29

else28:                                           ; preds = %ifcont26
  store i1 %291, i1* %306, align 1
  br label %ifcont29

ifcont29:                                         ; preds = %else28, %then27
  %307 = load i1, i1* %306, align 1
  br i1 %307, label %then30, label %else31

then30:                                           ; preds = %ifcont29
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont32

else31:                                           ; preds = %ifcont29
  br label %ifcont32

ifcont32:                                         ; preds = %else31, %then30
  %308 = load %array.1*, %array.1** %c, align 8
  %309 = getelementptr %array.1, %array.1* %308, i32 0, i32 2
  %310 = load %dimension_descriptor*, %dimension_descriptor** %309, align 8
  %311 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %310, i32 2
  %312 = getelementptr %dimension_descriptor, %dimension_descriptor* %311, i32 0, i32 1
  %313 = load i32, i32* %312, align 4
  %314 = load i32, i32* %n, align 4
  %315 = icmp ne i32 %313, %314
  %316 = load %array.1*, %array.1** %c, align 8
  %317 = getelementptr %array.1, %array.1* %316, i32 0, i32 2
  %318 = load %dimension_descriptor*, %dimension_descriptor** %317, align 8
  %319 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %318, i32 2
  %320 = getelementptr %dimension_descriptor, %dimension_descriptor* %319, i32 0, i32 1
  %321 = load i32, i32* %320, align 4
  %322 = getelementptr %dimension_descriptor, %dimension_descriptor* %319, i32 0, i32 2
  %323 = load i32, i32* %322, align 4
  %324 = add i32 %323, %321
  %325 = sub i32 %324, 1
  %326 = load i32, i32* %n, align 4
  %327 = mul i32 3, %326
  %328 = icmp ne i32 %325, %327
  %329 = icmp eq i1 %315, false
  %330 = alloca i1, align 1
  br i1 %329, label %then33, label %else34

then33:                                           ; preds = %ifcont32
  store i1 %328, i1* %330, align 1
  br label %ifcont35

else34:                                           ; preds = %ifcont32
  store i1 %315, i1* %330, align 1
  br label %ifcont35

ifcont35:                                         ; preds = %else34, %then33
  %331 = load i1, i1* %330, align 1
  br i1 %331, label %then36, label %else37

then36:                                           ; preds = %ifcont35
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont38

else37:                                           ; preds = %ifcont35
  br label %ifcont38

ifcont38:                                         ; preds = %else37, %then36
  %332 = load %array*, %array** %a, align 8
  %333 = getelementptr %array, %array* %332, i32 0, i32 2
  %334 = load %dimension_descriptor*, %dimension_descriptor** %333, align 8
  %335 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %334, i32 0
  %336 = getelementptr %dimension_descriptor, %dimension_descriptor* %335, i32 0, i32 1
  %337 = load i32, i32* %336, align 4
  %338 = sub i32 %337, 1
  store i32 %338, i32* %i, align 4
  br label %loop.head39

loop.head39:                                      ; preds = %ifcont43, %ifcont38
  %339 = load i32, i32* %i, align 4
  %340 = add i32 %339, 1
  %341 = load %array*, %array** %a, align 8
  %342 = getelementptr %array, %array* %341, i32 0, i32 2
  %343 = load %dimension_descriptor*, %dimension_descriptor** %342, align 8
  %344 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %343, i32 0
  %345 = getelementptr %dimension_descriptor, %dimension_descriptor* %344, i32 0, i32 1
  %346 = load i32, i32* %345, align 4
  %347 = getelementptr %dimension_descriptor, %dimension_descriptor* %344, i32 0, i32 2
  %348 = load i32, i32* %347, align 4
  %349 = add i32 %348, %346
  %350 = sub i32 %349, 1
  %351 = icmp sle i32 %340, %350
  br i1 %351, label %loop.body40, label %loop.end44

loop.body40:                                      ; preds = %loop.head39
  %352 = load i32, i32* %i, align 4
  %353 = add i32 %352, 1
  store i32 %353, i32* %i, align 4
  %354 = load i32, i32* %i, align 4
  %355 = load %array*, %array** %a, align 8
  %356 = getelementptr %array, %array* %355, i32 0, i32 2
  %357 = load %dimension_descriptor*, %dimension_descriptor** %356, align 8
  %358 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %357, i32 0
  %359 = getelementptr %dimension_descriptor, %dimension_descriptor* %358, i32 0, i32 1
  %360 = load i32, i32* %359, align 4
  %361 = sub i32 %354, %360
  %362 = getelementptr %dimension_descriptor, %dimension_descriptor* %358, i32 0, i32 0
  %363 = load i32, i32* %362, align 4
  %364 = mul i32 %363, %361
  %365 = add i32 0, %364
  %366 = getelementptr %array, %array* %355, i32 0, i32 1
  %367 = load i32, i32* %366, align 4
  %368 = add i32 %365, %367
  %369 = getelementptr %array, %array* %355, i32 0, i32 0
  %370 = load i32*, i32** %369, align 8
  %371 = getelementptr inbounds i32, i32* %370, i32 %368
  %372 = load i32, i32* %371, align 4
  %373 = load i32, i32* %i, align 4
  %374 = icmp ne i32 %372, %373
  br i1 %374, label %then41, label %else42

then41:                                           ; preds = %loop.body40
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont43

else42:                                           ; preds = %loop.body40
  br label %ifcont43

ifcont43:                                         ; preds = %else42, %then41
  br label %loop.head39

loop.end44:                                       ; preds = %loop.head39
  %375 = load %array*, %array** %a, align 8
  %376 = getelementptr %array, %array* %375, i32 0, i32 2
  %377 = load %dimension_descriptor*, %dimension_descriptor** %376, align 8
  %378 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %377, i32 0
  %379 = getelementptr %dimension_descriptor, %dimension_descriptor* %378, i32 0, i32 1
  %380 = load i32, i32* %379, align 4
  %381 = add i32 %380, 1
  store i32 %381, i32* %i, align 4
  %382 = load %array.0*, %array.0** %b, align 8
  %383 = getelementptr %array.0, %array.0* %382, i32 0, i32 2
  %384 = load %dimension_descriptor*, %dimension_descriptor** %383, align 8
  %385 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %384, i32 0
  %386 = getelementptr %dimension_descriptor, %dimension_descriptor* %385, i32 0, i32 1
  %387 = load i32, i32* %386, align 4
  %388 = sub i32 %387, 1
  store i32 %388, i32* %i, align 4
  br label %loop.head45

loop.head45:                                      ; preds = %loop.end52, %loop.end44
  %389 = load i32, i32* %i, align 4
  %390 = add i32 %389, 1
  %391 = load %array.0*, %array.0** %b, align 8
  %392 = getelementptr %array.0, %array.0* %391, i32 0, i32 2
  %393 = load %dimension_descriptor*, %dimension_descriptor** %392, align 8
  %394 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %393, i32 0
  %395 = getelementptr %dimension_descriptor, %dimension_descriptor* %394, i32 0, i32 1
  %396 = load i32, i32* %395, align 4
  %397 = getelementptr %dimension_descriptor, %dimension_descriptor* %394, i32 0, i32 2
  %398 = load i32, i32* %397, align 4
  %399 = add i32 %398, %396
  %400 = sub i32 %399, 1
  %401 = icmp sle i32 %390, %400
  br i1 %401, label %loop.body46, label %loop.end53

loop.body46:                                      ; preds = %loop.head45
  %402 = load i32, i32* %i, align 4
  %403 = add i32 %402, 1
  store i32 %403, i32* %i, align 4
  %404 = load %array.0*, %array.0** %b, align 8
  %405 = getelementptr %array.0, %array.0* %404, i32 0, i32 2
  %406 = load %dimension_descriptor*, %dimension_descriptor** %405, align 8
  %407 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %406, i32 1
  %408 = getelementptr %dimension_descriptor, %dimension_descriptor* %407, i32 0, i32 1
  %409 = load i32, i32* %408, align 4
  %410 = sub i32 %409, 1
  store i32 %410, i32* %j, align 4
  br label %loop.head47

loop.head47:                                      ; preds = %ifcont51, %loop.body46
  %411 = load i32, i32* %j, align 4
  %412 = add i32 %411, 1
  %413 = load %array.0*, %array.0** %b, align 8
  %414 = getelementptr %array.0, %array.0* %413, i32 0, i32 2
  %415 = load %dimension_descriptor*, %dimension_descriptor** %414, align 8
  %416 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %415, i32 1
  %417 = getelementptr %dimension_descriptor, %dimension_descriptor* %416, i32 0, i32 1
  %418 = load i32, i32* %417, align 4
  %419 = getelementptr %dimension_descriptor, %dimension_descriptor* %416, i32 0, i32 2
  %420 = load i32, i32* %419, align 4
  %421 = add i32 %420, %418
  %422 = sub i32 %421, 1
  %423 = icmp sle i32 %412, %422
  br i1 %423, label %loop.body48, label %loop.end52

loop.body48:                                      ; preds = %loop.head47
  %424 = load i32, i32* %j, align 4
  %425 = add i32 %424, 1
  store i32 %425, i32* %j, align 4
  %426 = load i32, i32* %i, align 4
  %427 = load i32, i32* %j, align 4
  %428 = load %array.0*, %array.0** %b, align 8
  %429 = getelementptr %array.0, %array.0* %428, i32 0, i32 2
  %430 = load %dimension_descriptor*, %dimension_descriptor** %429, align 8
  %431 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %430, i32 0
  %432 = getelementptr %dimension_descriptor, %dimension_descriptor* %431, i32 0, i32 1
  %433 = load i32, i32* %432, align 4
  %434 = sub i32 %426, %433
  %435 = getelementptr %dimension_descriptor, %dimension_descriptor* %431, i32 0, i32 0
  %436 = load i32, i32* %435, align 4
  %437 = mul i32 %436, %434
  %438 = add i32 0, %437
  %439 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %430, i32 1
  %440 = getelementptr %dimension_descriptor, %dimension_descriptor* %439, i32 0, i32 1
  %441 = load i32, i32* %440, align 4
  %442 = sub i32 %427, %441
  %443 = getelementptr %dimension_descriptor, %dimension_descriptor* %439, i32 0, i32 0
  %444 = load i32, i32* %443, align 4
  %445 = mul i32 %444, %442
  %446 = add i32 %438, %445
  %447 = getelementptr %array.0, %array.0* %428, i32 0, i32 1
  %448 = load i32, i32* %447, align 4
  %449 = add i32 %446, %448
  %450 = getelementptr %array.0, %array.0* %428, i32 0, i32 0
  %451 = load float*, float** %450, align 8
  %452 = getelementptr inbounds float, float* %451, i32 %449
  %453 = load float, float* %452, align 4
  %454 = load i32, i32* %i, align 4
  %455 = load i32, i32* %j, align 4
  %456 = add i32 %454, %455
  %457 = sitofp i32 %456 to float
  %458 = fcmp une float %453, %457
  br i1 %458, label %then49, label %else50

then49:                                           ; preds = %loop.body48
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %loop.body48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  br label %loop.head47

loop.end52:                                       ; preds = %loop.head47
  %459 = load %array.0*, %array.0** %b, align 8
  %460 = getelementptr %array.0, %array.0* %459, i32 0, i32 2
  %461 = load %dimension_descriptor*, %dimension_descriptor** %460, align 8
  %462 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %461, i32 1
  %463 = getelementptr %dimension_descriptor, %dimension_descriptor* %462, i32 0, i32 1
  %464 = load i32, i32* %463, align 4
  %465 = add i32 %464, 1
  store i32 %465, i32* %j, align 4
  br label %loop.head45

loop.end53:                                       ; preds = %loop.head45
  %466 = load %array.0*, %array.0** %b, align 8
  %467 = getelementptr %array.0, %array.0* %466, i32 0, i32 2
  %468 = load %dimension_descriptor*, %dimension_descriptor** %467, align 8
  %469 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %468, i32 0
  %470 = getelementptr %dimension_descriptor, %dimension_descriptor* %469, i32 0, i32 1
  %471 = load i32, i32* %470, align 4
  %472 = add i32 %471, 1
  store i32 %472, i32* %i, align 4
  %473 = load %array.1*, %array.1** %c, align 8
  %474 = getelementptr %array.1, %array.1* %473, i32 0, i32 2
  %475 = load %dimension_descriptor*, %dimension_descriptor** %474, align 8
  %476 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %475, i32 0
  %477 = getelementptr %dimension_descriptor, %dimension_descriptor* %476, i32 0, i32 1
  %478 = load i32, i32* %477, align 4
  %479 = sub i32 %478, 1
  store i32 %479, i32* %i, align 4
  br label %loop.head54

loop.head54:                                      ; preds = %loop.end64, %loop.end53
  %480 = load i32, i32* %i, align 4
  %481 = add i32 %480, 1
  %482 = load %array.1*, %array.1** %c, align 8
  %483 = getelementptr %array.1, %array.1* %482, i32 0, i32 2
  %484 = load %dimension_descriptor*, %dimension_descriptor** %483, align 8
  %485 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %484, i32 0
  %486 = getelementptr %dimension_descriptor, %dimension_descriptor* %485, i32 0, i32 1
  %487 = load i32, i32* %486, align 4
  %488 = getelementptr %dimension_descriptor, %dimension_descriptor* %485, i32 0, i32 2
  %489 = load i32, i32* %488, align 4
  %490 = add i32 %489, %487
  %491 = sub i32 %490, 1
  %492 = icmp sle i32 %481, %491
  br i1 %492, label %loop.body55, label %loop.end65

loop.body55:                                      ; preds = %loop.head54
  %493 = load i32, i32* %i, align 4
  %494 = add i32 %493, 1
  store i32 %494, i32* %i, align 4
  %495 = load %array.1*, %array.1** %c, align 8
  %496 = getelementptr %array.1, %array.1* %495, i32 0, i32 2
  %497 = load %dimension_descriptor*, %dimension_descriptor** %496, align 8
  %498 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %497, i32 1
  %499 = getelementptr %dimension_descriptor, %dimension_descriptor* %498, i32 0, i32 1
  %500 = load i32, i32* %499, align 4
  %501 = sub i32 %500, 1
  store i32 %501, i32* %j, align 4
  br label %loop.head56

loop.head56:                                      ; preds = %loop.end63, %loop.body55
  %502 = load i32, i32* %j, align 4
  %503 = add i32 %502, 1
  %504 = load %array.1*, %array.1** %c, align 8
  %505 = getelementptr %array.1, %array.1* %504, i32 0, i32 2
  %506 = load %dimension_descriptor*, %dimension_descriptor** %505, align 8
  %507 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %506, i32 1
  %508 = getelementptr %dimension_descriptor, %dimension_descriptor* %507, i32 0, i32 1
  %509 = load i32, i32* %508, align 4
  %510 = getelementptr %dimension_descriptor, %dimension_descriptor* %507, i32 0, i32 2
  %511 = load i32, i32* %510, align 4
  %512 = add i32 %511, %509
  %513 = sub i32 %512, 1
  %514 = icmp sle i32 %503, %513
  br i1 %514, label %loop.body57, label %loop.end64

loop.body57:                                      ; preds = %loop.head56
  %515 = load i32, i32* %j, align 4
  %516 = add i32 %515, 1
  store i32 %516, i32* %j, align 4
  %517 = load %array.1*, %array.1** %c, align 8
  %518 = getelementptr %array.1, %array.1* %517, i32 0, i32 2
  %519 = load %dimension_descriptor*, %dimension_descriptor** %518, align 8
  %520 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %519, i32 2
  %521 = getelementptr %dimension_descriptor, %dimension_descriptor* %520, i32 0, i32 1
  %522 = load i32, i32* %521, align 4
  %523 = sub i32 %522, 1
  store i32 %523, i32* %k, align 4
  br label %loop.head58

loop.head58:                                      ; preds = %ifcont62, %loop.body57
  %524 = load i32, i32* %k, align 4
  %525 = add i32 %524, 1
  %526 = load %array.1*, %array.1** %c, align 8
  %527 = getelementptr %array.1, %array.1* %526, i32 0, i32 2
  %528 = load %dimension_descriptor*, %dimension_descriptor** %527, align 8
  %529 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %528, i32 2
  %530 = getelementptr %dimension_descriptor, %dimension_descriptor* %529, i32 0, i32 1
  %531 = load i32, i32* %530, align 4
  %532 = getelementptr %dimension_descriptor, %dimension_descriptor* %529, i32 0, i32 2
  %533 = load i32, i32* %532, align 4
  %534 = add i32 %533, %531
  %535 = sub i32 %534, 1
  %536 = icmp sle i32 %525, %535
  br i1 %536, label %loop.body59, label %loop.end63

loop.body59:                                      ; preds = %loop.head58
  %537 = load i32, i32* %k, align 4
  %538 = add i32 %537, 1
  store i32 %538, i32* %k, align 4
  %539 = load i32, i32* %i, align 4
  %540 = load i32, i32* %j, align 4
  %541 = load i32, i32* %k, align 4
  %542 = load %array.1*, %array.1** %c, align 8
  %543 = getelementptr %array.1, %array.1* %542, i32 0, i32 2
  %544 = load %dimension_descriptor*, %dimension_descriptor** %543, align 8
  %545 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %544, i32 0
  %546 = getelementptr %dimension_descriptor, %dimension_descriptor* %545, i32 0, i32 1
  %547 = load i32, i32* %546, align 4
  %548 = sub i32 %539, %547
  %549 = getelementptr %dimension_descriptor, %dimension_descriptor* %545, i32 0, i32 0
  %550 = load i32, i32* %549, align 4
  %551 = mul i32 %550, %548
  %552 = add i32 0, %551
  %553 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %544, i32 1
  %554 = getelementptr %dimension_descriptor, %dimension_descriptor* %553, i32 0, i32 1
  %555 = load i32, i32* %554, align 4
  %556 = sub i32 %540, %555
  %557 = getelementptr %dimension_descriptor, %dimension_descriptor* %553, i32 0, i32 0
  %558 = load i32, i32* %557, align 4
  %559 = mul i32 %558, %556
  %560 = add i32 %552, %559
  %561 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %544, i32 2
  %562 = getelementptr %dimension_descriptor, %dimension_descriptor* %561, i32 0, i32 1
  %563 = load i32, i32* %562, align 4
  %564 = sub i32 %541, %563
  %565 = getelementptr %dimension_descriptor, %dimension_descriptor* %561, i32 0, i32 0
  %566 = load i32, i32* %565, align 4
  %567 = mul i32 %566, %564
  %568 = add i32 %560, %567
  %569 = getelementptr %array.1, %array.1* %542, i32 0, i32 1
  %570 = load i32, i32* %569, align 4
  %571 = add i32 %568, %570
  %572 = getelementptr %array.1, %array.1* %542, i32 0, i32 0
  %573 = load %complex_4*, %complex_4** %572, align 8
  %574 = getelementptr inbounds %complex_4, %complex_4* %573, i32 %571
  %575 = load %complex_4, %complex_4* %574, align 4
  %576 = load i32, i32* %i, align 4
  %577 = load i32, i32* %j, align 4
  %578 = add i32 %576, %577
  %579 = load i32, i32* %k, align 4
  %580 = add i32 %578, %579
  %581 = sitofp i32 %580 to float
  %582 = alloca %complex_4, align 8
  %583 = getelementptr %complex_4, %complex_4* %582, i32 0, i32 0
  %584 = getelementptr %complex_4, %complex_4* %582, i32 0, i32 1
  store float %581, float* %583, align 4
  store float 0.000000e+00, float* %584, align 4
  %585 = load %complex_4, %complex_4* %582, align 4
  %586 = alloca %complex_4, align 8
  store %complex_4 %575, %complex_4* %586, align 4
  %587 = getelementptr %complex_4, %complex_4* %586, i32 0, i32 0
  %588 = load float, float* %587, align 4
  %589 = alloca %complex_4, align 8
  store %complex_4 %585, %complex_4* %589, align 4
  %590 = getelementptr %complex_4, %complex_4* %589, i32 0, i32 0
  %591 = load float, float* %590, align 4
  %592 = alloca %complex_4, align 8
  store %complex_4 %575, %complex_4* %592, align 4
  %593 = getelementptr %complex_4, %complex_4* %592, i32 0, i32 1
  %594 = load float, float* %593, align 4
  %595 = alloca %complex_4, align 8
  store %complex_4 %585, %complex_4* %595, align 4
  %596 = getelementptr %complex_4, %complex_4* %595, i32 0, i32 1
  %597 = load float, float* %596, align 4
  %598 = fcmp une float %588, %591
  %599 = fcmp une float %594, %597
  %600 = and i1 %598, %599
  br i1 %600, label %then60, label %else61

then60:                                           ; preds = %loop.body59
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont62

else61:                                           ; preds = %loop.body59
  br label %ifcont62

ifcont62:                                         ; preds = %else61, %then60
  br label %loop.head58

loop.end63:                                       ; preds = %loop.head58
  %601 = load %array.1*, %array.1** %c, align 8
  %602 = getelementptr %array.1, %array.1* %601, i32 0, i32 2
  %603 = load %dimension_descriptor*, %dimension_descriptor** %602, align 8
  %604 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %603, i32 2
  %605 = getelementptr %dimension_descriptor, %dimension_descriptor* %604, i32 0, i32 1
  %606 = load i32, i32* %605, align 4
  %607 = add i32 %606, 1
  store i32 %607, i32* %k, align 4
  br label %loop.head56

loop.end64:                                       ; preds = %loop.head56
  %608 = load %array.1*, %array.1** %c, align 8
  %609 = getelementptr %array.1, %array.1* %608, i32 0, i32 2
  %610 = load %dimension_descriptor*, %dimension_descriptor** %609, align 8
  %611 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %610, i32 1
  %612 = getelementptr %dimension_descriptor, %dimension_descriptor* %611, i32 0, i32 1
  %613 = load i32, i32* %612, align 4
  %614 = add i32 %613, 1
  store i32 %614, i32* %j, align 4
  br label %loop.head54

loop.end65:                                       ; preds = %loop.head54
  %615 = load %array.1*, %array.1** %c, align 8
  %616 = getelementptr %array.1, %array.1* %615, i32 0, i32 2
  %617 = load %dimension_descriptor*, %dimension_descriptor** %616, align 8
  %618 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %617, i32 0
  %619 = getelementptr %dimension_descriptor, %dimension_descriptor* %618, i32 0, i32 1
  %620 = load i32, i32* %619, align 4
  %621 = add i32 %620, 1
  store i32 %621, i32* %i, align 4
  %622 = load %array.1*, %array.1** %c, align 8
  %623 = getelementptr %array.1, %array.1* %622, i32 0, i32 0
  %624 = load %complex_4*, %complex_4** %623, align 8
  %625 = getelementptr %array.1, %array.1* %622, i32 0, i32 1
  %626 = load i32, i32* %625, align 4
  %627 = getelementptr inbounds %complex_4, %complex_4* %624, i32 %626
  %628 = load %array.1*, %array.1** %c, align 8
  %629 = getelementptr %array.1, %array.1* %628, i32 0, i32 2
  %630 = load %dimension_descriptor*, %dimension_descriptor** %629, align 8
  %631 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %630, i32 0
  %632 = getelementptr %dimension_descriptor, %dimension_descriptor* %631, i32 0, i32 1
  %633 = load i32, i32* %632, align 4
  store i32 %633, i32* %call_arg_value, align 4
  %634 = load %array.1*, %array.1** %c, align 8
  %635 = getelementptr %array.1, %array.1* %634, i32 0, i32 2
  %636 = load %dimension_descriptor*, %dimension_descriptor** %635, align 8
  %637 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %636, i32 0
  %638 = getelementptr %dimension_descriptor, %dimension_descriptor* %637, i32 0, i32 2
  %639 = load i32, i32* %638, align 4
  store i32 %639, i32* %call_arg_value66, align 4
  %640 = load %array.1*, %array.1** %c, align 8
  %641 = getelementptr %array.1, %array.1* %640, i32 0, i32 2
  %642 = load %dimension_descriptor*, %dimension_descriptor** %641, align 8
  %643 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %642, i32 1
  %644 = getelementptr %dimension_descriptor, %dimension_descriptor* %643, i32 0, i32 1
  %645 = load i32, i32* %644, align 4
  store i32 %645, i32* %call_arg_value67, align 4
  %646 = load %array.1*, %array.1** %c, align 8
  %647 = getelementptr %array.1, %array.1* %646, i32 0, i32 2
  %648 = load %dimension_descriptor*, %dimension_descriptor** %647, align 8
  %649 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %648, i32 1
  %650 = getelementptr %dimension_descriptor, %dimension_descriptor* %649, i32 0, i32 2
  %651 = load i32, i32* %650, align 4
  store i32 %651, i32* %call_arg_value68, align 4
  %652 = load %array.1*, %array.1** %c, align 8
  %653 = getelementptr %array.1, %array.1* %652, i32 0, i32 2
  %654 = load %dimension_descriptor*, %dimension_descriptor** %653, align 8
  %655 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %654, i32 2
  %656 = getelementptr %dimension_descriptor, %dimension_descriptor* %655, i32 0, i32 1
  %657 = load i32, i32* %656, align 4
  store i32 %657, i32* %call_arg_value69, align 4
  %658 = load %array.1*, %array.1** %c, align 8
  %659 = getelementptr %array.1, %array.1* %658, i32 0, i32 2
  %660 = load %dimension_descriptor*, %dimension_descriptor** %659, align 8
  %661 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %660, i32 2
  %662 = getelementptr %dimension_descriptor, %dimension_descriptor* %661, i32 0, i32 2
  %663 = load i32, i32* %662, align 4
  store i32 %663, i32* %call_arg_value70, align 4
  %664 = call %complex_4 @reduce_sum_c(%complex_4* %627, i32* %call_arg_value, i32* %call_arg_value66, i32* %call_arg_value67, i32* %call_arg_value68, i32* %call_arg_value69, i32* %call_arg_value70)
  store %complex_4 %664, %complex_4* %r, align 4
  %665 = load %complex_4, %complex_4* %r, align 4
  %666 = alloca %complex_4, align 8
  %667 = getelementptr %complex_4, %complex_4* %666, i32 0, i32 0
  %668 = getelementptr %complex_4, %complex_4* %666, i32 0, i32 1
  store float 1.143450e+05, float* %667, align 4
  store float 0.000000e+00, float* %668, align 4
  %669 = load %complex_4, %complex_4* %666, align 4
  %670 = alloca %complex_4, align 8
  store %complex_4 %665, %complex_4* %670, align 4
  %671 = getelementptr %complex_4, %complex_4* %670, i32 0, i32 0
  %672 = load float, float* %671, align 4
  %673 = alloca %complex_4, align 8
  store %complex_4 %669, %complex_4* %673, align 4
  %674 = getelementptr %complex_4, %complex_4* %673, i32 0, i32 0
  %675 = load float, float* %674, align 4
  %676 = alloca %complex_4, align 8
  store %complex_4 %665, %complex_4* %676, align 4
  %677 = getelementptr %complex_4, %complex_4* %676, i32 0, i32 1
  %678 = load float, float* %677, align 4
  %679 = alloca %complex_4, align 8
  store %complex_4 %669, %complex_4* %679, align 4
  %680 = getelementptr %complex_4, %complex_4* %679, i32 0, i32 1
  %681 = load float, float* %680, align 4
  %682 = fcmp une float %672, %675
  %683 = fcmp une float %678, %681
  %684 = and i1 %682, %683
  br i1 %684, label %then71, label %else72

then71:                                           ; preds = %loop.end65
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont73

else72:                                           ; preds = %loop.end65
  br label %ifcont73

ifcont73:                                         ; preds = %else72, %then71
  %685 = load %array*, %array** %a, align 8
  %686 = getelementptr %array, %array* %685, i32 0, i32 0
  %687 = load i32*, i32** %686, align 8
  %688 = ptrtoint i32* %687 to i64
  %689 = icmp ne i64 %688, 0
  br i1 %689, label %then74, label %else75

then74:                                           ; preds = %ifcont73
  %690 = getelementptr %array, %array* %685, i32 0, i32 0
  %691 = load i32*, i32** %690, align 8
  %692 = alloca i8*, align 8
  %693 = bitcast i32* %691 to i8*
  store i8* %693, i8** %692, align 8
  %694 = load i8*, i8** %692, align 8
  call void (i8*, ...) @_lfortran_free(i8* %694)
  %695 = getelementptr %array, %array* %685, i32 0, i32 0
  store i32* null, i32** %695, align 8
  br label %ifcont76

else75:                                           ; preds = %ifcont73
  br label %ifcont76

ifcont76:                                         ; preds = %else75, %then74
  %696 = load %array.0*, %array.0** %b, align 8
  %697 = getelementptr %array.0, %array.0* %696, i32 0, i32 0
  %698 = load float*, float** %697, align 8
  %699 = ptrtoint float* %698 to i64
  %700 = icmp ne i64 %699, 0
  br i1 %700, label %then77, label %else78

then77:                                           ; preds = %ifcont76
  %701 = getelementptr %array.0, %array.0* %696, i32 0, i32 0
  %702 = load float*, float** %701, align 8
  %703 = alloca i8*, align 8
  %704 = bitcast float* %702 to i8*
  store i8* %704, i8** %703, align 8
  %705 = load i8*, i8** %703, align 8
  call void (i8*, ...) @_lfortran_free(i8* %705)
  %706 = getelementptr %array.0, %array.0* %696, i32 0, i32 0
  store float* null, float** %706, align 8
  br label %ifcont79

else78:                                           ; preds = %ifcont76
  br label %ifcont79

ifcont79:                                         ; preds = %else78, %then77
  %707 = load %array.1*, %array.1** %c, align 8
  %708 = getelementptr %array.1, %array.1* %707, i32 0, i32 0
  %709 = load %complex_4*, %complex_4** %708, align 8
  %710 = ptrtoint %complex_4* %709 to i64
  %711 = icmp ne i64 %710, 0
  br i1 %711, label %then80, label %else81

then80:                                           ; preds = %ifcont79
  %712 = getelementptr %array.1, %array.1* %707, i32 0, i32 0
  %713 = load %complex_4*, %complex_4** %712, align 8
  %714 = alloca i8*, align 8
  %715 = bitcast %complex_4* %713 to i8*
  store i8* %715, i8** %714, align 8
  %716 = load i8*, i8** %714, align 8
  call void (i8*, ...) @_lfortran_free(i8* %716)
  %717 = getelementptr %array.1, %array.1* %707, i32 0, i32 0
  store %complex_4* null, %complex_4** %717, align 8
  br label %ifcont82

else81:                                           ; preds = %ifcont79
  br label %ifcont82

ifcont82:                                         ; preds = %else81, %then80
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
