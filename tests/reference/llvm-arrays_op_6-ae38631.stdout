; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { float*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define void @asquare_a_b_c(float* %a, i32* %__1a, i32* %__2a, i32* %__3a, i32* %__4a, i32* %__5a, i32* %__6a, float* %b, i32* %__1b, i32* %__2b, i32* %__3b, i32* %__4b, i32* %__5b, i32* %__6b, float* %c, i32* %__1c, i32* %__2c, i32* %__3c, i32* %__4c, i32* %__5c, i32* %__6c, [8 x float]* %d) {
.entry:
  %__1_t = alloca i32, align 4
  %__1_v = alloca i32, align 4
  %__2_t = alloca i32, align 4
  %__2_v = alloca i32, align 4
  %__3_t = alloca i32, align 4
  %__3_v = alloca i32, align 4
  %__libasr__created__var__0__real_bin_op_res = alloca %array*, align 8
  store %array* null, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %arr_desc = alloca %array, align 8
  %0 = getelementptr %array, %array* %arr_desc, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 3, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array, %array* %arr_desc, i32 0, i32 4
  store i32 3, i32* %4, align 4
  %5 = getelementptr %array, %array* %arr_desc, i32 0, i32 0
  store float* null, float** %5, align 8
  store %array* %arr_desc, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %6 = load i32, i32* %__1a, align 4
  %7 = load i32, i32* %__2a, align 4
  %8 = load i32, i32* %__1a, align 4
  %9 = add i32 %7, %8
  %10 = sub i32 %9, 1
  %11 = load i32, i32* %__1a, align 4
  %12 = sub i32 %10, %11
  %13 = add i32 %12, 1
  %14 = load i32, i32* %__3a, align 4
  %15 = load i32, i32* %__4a, align 4
  %16 = load i32, i32* %__3a, align 4
  %17 = add i32 %15, %16
  %18 = sub i32 %17, 1
  %19 = load i32, i32* %__3a, align 4
  %20 = sub i32 %18, %19
  %21 = add i32 %20, 1
  %22 = load i32, i32* %__5a, align 4
  %23 = load i32, i32* %__6a, align 4
  %24 = load i32, i32* %__5a, align 4
  %25 = add i32 %23, %24
  %26 = sub i32 %25, 1
  %27 = load i32, i32* %__5a, align 4
  %28 = sub i32 %26, %27
  %29 = add i32 %28, 1
  %30 = load %array*, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %31 = getelementptr %array, %array* %30, i32 0, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr %array, %array* %30, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 0
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 2
  store i32 1, i32* %35, align 4
  store i32 %6, i32* %36, align 4
  store i32 %13, i32* %37, align 4
  %38 = mul i32 1, %13
  %39 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 1
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 0
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 1
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 2
  store i32 %38, i32* %40, align 4
  store i32 %14, i32* %41, align 4
  store i32 %21, i32* %42, align 4
  %43 = mul i32 %38, %21
  %44 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 2
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 0
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 1
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 2
  store i32 %43, i32* %45, align 4
  store i32 %22, i32* %46, align 4
  store i32 %29, i32* %47, align 4
  %48 = mul i32 %43, %29
  %49 = getelementptr %array, %array* %30, i32 0, i32 0
  %50 = alloca i32, align 4
  %51 = mul i32 %48, 4
  store i32 %51, i32* %50, align 4
  %52 = load i32, i32* %50, align 4
  %53 = call i8* (i32, ...) @_lfortran_malloc(i32 %52)
  %54 = bitcast i8* %53 to float*
  store float* %54, float** %49, align 8
  %55 = load i32, i32* %__1a, align 4
  store i32 %55, i32* %__1_v, align 4
  %56 = load %array*, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %57 = getelementptr %array, %array* %56, i32 0, i32 2
  %58 = load %dimension_descriptor*, %dimension_descriptor** %57, align 8
  %59 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %58, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sub i32 %61, 1
  store i32 %62, i32* %__1_t, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %63 = load i32, i32* %__1_t, align 4
  %64 = add i32 %63, 1
  %65 = load %array*, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %66 = getelementptr %array, %array* %65, i32 0, i32 2
  %67 = load %dimension_descriptor*, %dimension_descriptor** %66, align 8
  %68 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %67, i32 0
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = add i32 %72, %70
  %74 = sub i32 %73, 1
  %75 = icmp sle i32 %64, %74
  br i1 %75, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %76 = load i32, i32* %__1_t, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %__1_t, align 4
  %78 = load i32, i32* %__1a, align 4
  store i32 %78, i32* %__2_v, align 4
  %79 = load %array*, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %80 = getelementptr %array, %array* %79, i32 0, i32 2
  %81 = load %dimension_descriptor*, %dimension_descriptor** %80, align 8
  %82 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %81, i32 1
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = sub i32 %84, 1
  store i32 %85, i32* %__2_t, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %86 = load i32, i32* %__2_t, align 4
  %87 = add i32 %86, 1
  %88 = load %array*, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %89 = getelementptr %array, %array* %88, i32 0, i32 2
  %90 = load %dimension_descriptor*, %dimension_descriptor** %89, align 8
  %91 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %90, i32 1
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, %93
  %97 = sub i32 %96, 1
  %98 = icmp sle i32 %87, %97
  br i1 %98, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %99 = load i32, i32* %__2_t, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %__2_t, align 4
  %101 = load i32, i32* %__3a, align 4
  store i32 %101, i32* %__3_v, align 4
  %102 = load %array*, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %103 = getelementptr %array, %array* %102, i32 0, i32 2
  %104 = load %dimension_descriptor*, %dimension_descriptor** %103, align 8
  %105 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %104, i32 2
  %106 = getelementptr %dimension_descriptor, %dimension_descriptor* %105, i32 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = sub i32 %107, 1
  store i32 %108, i32* %__3_t, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %109 = load i32, i32* %__3_t, align 4
  %110 = add i32 %109, 1
  %111 = load %array*, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %112 = getelementptr %array, %array* %111, i32 0, i32 2
  %113 = load %dimension_descriptor*, %dimension_descriptor** %112, align 8
  %114 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %113, i32 2
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %114, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr %dimension_descriptor, %dimension_descriptor* %114, i32 0, i32 2
  %118 = load i32, i32* %117, align 4
  %119 = add i32 %118, %116
  %120 = sub i32 %119, 1
  %121 = icmp sle i32 %110, %120
  br i1 %121, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %122 = load i32, i32* %__3_t, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %__3_t, align 4
  %124 = load i32, i32* %__1_t, align 4
  %125 = load i32, i32* %__2_t, align 4
  %126 = load i32, i32* %__3_t, align 4
  %127 = load %array*, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %128 = getelementptr %array, %array* %127, i32 0, i32 2
  %129 = load %dimension_descriptor*, %dimension_descriptor** %128, align 8
  %130 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %129, i32 0
  %131 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = sub i32 %124, %132
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = mul i32 %135, %133
  %137 = add i32 0, %136
  %138 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %129, i32 1
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = sub i32 %125, %140
  %142 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = mul i32 %143, %141
  %145 = add i32 %137, %144
  %146 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %129, i32 2
  %147 = getelementptr %dimension_descriptor, %dimension_descriptor* %146, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = sub i32 %126, %148
  %150 = getelementptr %dimension_descriptor, %dimension_descriptor* %146, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = mul i32 %151, %149
  %153 = add i32 %145, %152
  %154 = getelementptr %array, %array* %127, i32 0, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = add i32 %153, %155
  %157 = getelementptr %array, %array* %127, i32 0, i32 0
  %158 = load float*, float** %157, align 8
  %159 = getelementptr inbounds float, float* %158, i32 %156
  %160 = load i32, i32* %__1_v, align 4
  %161 = load i32, i32* %__2_v, align 4
  %162 = load i32, i32* %__3_v, align 4
  %163 = load i32, i32* %__1a, align 4
  %164 = load i32, i32* %__2a, align 4
  %165 = load i32, i32* %__3a, align 4
  %166 = load i32, i32* %__4a, align 4
  %167 = load i32, i32* %__5a, align 4
  %168 = load i32, i32* %__6a, align 4
  %169 = sub i32 %160, %163
  %170 = mul i32 1, %169
  %171 = add i32 0, %170
  %172 = mul i32 1, %164
  %173 = sub i32 %161, %165
  %174 = mul i32 %172, %173
  %175 = add i32 %171, %174
  %176 = mul i32 %172, %166
  %177 = sub i32 %162, %167
  %178 = mul i32 %176, %177
  %179 = add i32 %175, %178
  %180 = mul i32 %176, %168
  %181 = getelementptr inbounds float, float* %a, i32 %179
  %182 = load float, float* %181, align 4
  %183 = load i32, i32* %__1_v, align 4
  %184 = load i32, i32* %__2_v, align 4
  %185 = load i32, i32* %__3_v, align 4
  %186 = load i32, i32* %__1b, align 4
  %187 = load i32, i32* %__2b, align 4
  %188 = load i32, i32* %__3b, align 4
  %189 = load i32, i32* %__4b, align 4
  %190 = load i32, i32* %__5b, align 4
  %191 = load i32, i32* %__6b, align 4
  %192 = sub i32 %183, %186
  %193 = mul i32 1, %192
  %194 = add i32 0, %193
  %195 = mul i32 1, %187
  %196 = sub i32 %184, %188
  %197 = mul i32 %195, %196
  %198 = add i32 %194, %197
  %199 = mul i32 %195, %189
  %200 = sub i32 %185, %190
  %201 = mul i32 %199, %200
  %202 = add i32 %198, %201
  %203 = mul i32 %199, %191
  %204 = getelementptr inbounds float, float* %b, i32 %202
  %205 = load float, float* %204, align 4
  %206 = fadd float %182, %205
  store float %206, float* %159, align 4
  %207 = load i32, i32* %__3_v, align 4
  %208 = add i32 %207, 1
  store i32 %208, i32* %__3_v, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  %209 = load %array*, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %210 = getelementptr %array, %array* %209, i32 0, i32 2
  %211 = load %dimension_descriptor*, %dimension_descriptor** %210, align 8
  %212 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %211, i32 2
  %213 = getelementptr %dimension_descriptor, %dimension_descriptor* %212, i32 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = add i32 %214, 1
  store i32 %215, i32* %__3_t, align 4
  %216 = load i32, i32* %__2_v, align 4
  %217 = add i32 %216, 1
  store i32 %217, i32* %__2_v, align 4
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  %218 = load %array*, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %219 = getelementptr %array, %array* %218, i32 0, i32 2
  %220 = load %dimension_descriptor*, %dimension_descriptor** %219, align 8
  %221 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %220, i32 1
  %222 = getelementptr %dimension_descriptor, %dimension_descriptor* %221, i32 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = add i32 %223, 1
  store i32 %224, i32* %__2_t, align 4
  %225 = load i32, i32* %__1_v, align 4
  %226 = add i32 %225, 1
  store i32 %226, i32* %__1_v, align 4
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %227 = load %array*, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %228 = getelementptr %array, %array* %227, i32 0, i32 2
  %229 = load %dimension_descriptor*, %dimension_descriptor** %228, align 8
  %230 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %229, i32 0
  %231 = getelementptr %dimension_descriptor, %dimension_descriptor* %230, i32 0, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = add i32 %232, 1
  store i32 %233, i32* %__1_t, align 4
  %234 = load %array*, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %235 = getelementptr %array, %array* %234, i32 0, i32 2
  %236 = load %dimension_descriptor*, %dimension_descriptor** %235, align 8
  %237 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %236, i32 0
  %238 = getelementptr %dimension_descriptor, %dimension_descriptor* %237, i32 0, i32 1
  %239 = load i32, i32* %238, align 4
  store i32 %239, i32* %__1_v, align 4
  store i32 0, i32* %__1_t, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.end14, %loop.end6
  %240 = load i32, i32* %__1_t, align 4
  %241 = add i32 %240, 1
  %242 = icmp sle i32 %241, 2
  br i1 %242, label %loop.body8, label %loop.end15

loop.body8:                                       ; preds = %loop.head7
  %243 = load i32, i32* %__1_t, align 4
  %244 = add i32 %243, 1
  store i32 %244, i32* %__1_t, align 4
  %245 = load %array*, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %246 = getelementptr %array, %array* %245, i32 0, i32 2
  %247 = load %dimension_descriptor*, %dimension_descriptor** %246, align 8
  %248 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %247, i32 0
  %249 = getelementptr %dimension_descriptor, %dimension_descriptor* %248, i32 0, i32 1
  %250 = load i32, i32* %249, align 4
  store i32 %250, i32* %__2_v, align 4
  store i32 0, i32* %__2_t, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.end13, %loop.body8
  %251 = load i32, i32* %__2_t, align 4
  %252 = add i32 %251, 1
  %253 = icmp sle i32 %252, 2
  br i1 %253, label %loop.body10, label %loop.end14

loop.body10:                                      ; preds = %loop.head9
  %254 = load i32, i32* %__2_t, align 4
  %255 = add i32 %254, 1
  store i32 %255, i32* %__2_t, align 4
  %256 = load %array*, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %257 = getelementptr %array, %array* %256, i32 0, i32 2
  %258 = load %dimension_descriptor*, %dimension_descriptor** %257, align 8
  %259 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %258, i32 1
  %260 = getelementptr %dimension_descriptor, %dimension_descriptor* %259, i32 0, i32 1
  %261 = load i32, i32* %260, align 4
  store i32 %261, i32* %__3_v, align 4
  store i32 0, i32* %__3_t, align 4
  br label %loop.head11

loop.head11:                                      ; preds = %loop.body12, %loop.body10
  %262 = load i32, i32* %__3_t, align 4
  %263 = add i32 %262, 1
  %264 = icmp sle i32 %263, 2
  br i1 %264, label %loop.body12, label %loop.end13

loop.body12:                                      ; preds = %loop.head11
  %265 = load i32, i32* %__3_t, align 4
  %266 = add i32 %265, 1
  store i32 %266, i32* %__3_t, align 4
  %267 = load i32, i32* %__1_t, align 4
  %268 = load i32, i32* %__2_t, align 4
  %269 = load i32, i32* %__3_t, align 4
  %270 = sub i32 %267, 1
  %271 = mul i32 1, %270
  %272 = add i32 0, %271
  %273 = sub i32 %268, 1
  %274 = mul i32 2, %273
  %275 = add i32 %272, %274
  %276 = sub i32 %269, 1
  %277 = mul i32 4, %276
  %278 = add i32 %275, %277
  %279 = getelementptr [8 x float], [8 x float]* %d, i32 0, i32 %278
  %280 = load i32, i32* %__1_v, align 4
  %281 = load i32, i32* %__2_v, align 4
  %282 = load i32, i32* %__3_v, align 4
  %283 = load %array*, %array** %__libasr__created__var__0__real_bin_op_res, align 8
  %284 = getelementptr %array, %array* %283, i32 0, i32 2
  %285 = load %dimension_descriptor*, %dimension_descriptor** %284, align 8
  %286 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %285, i32 0
  %287 = getelementptr %dimension_descriptor, %dimension_descriptor* %286, i32 0, i32 1
  %288 = load i32, i32* %287, align 4
  %289 = sub i32 %280, %288
  %290 = getelementptr %dimension_descriptor, %dimension_descriptor* %286, i32 0, i32 0
  %291 = load i32, i32* %290, align 4
  %292 = mul i32 %291, %289
  %293 = add i32 0, %292
  %294 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %285, i32 1
  %295 = getelementptr %dimension_descriptor, %dimension_descriptor* %294, i32 0, i32 1
  %296 = load i32, i32* %295, align 4
  %297 = sub i32 %281, %296
  %298 = getelementptr %dimension_descriptor, %dimension_descriptor* %294, i32 0, i32 0
  %299 = load i32, i32* %298, align 4
  %300 = mul i32 %299, %297
  %301 = add i32 %293, %300
  %302 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %285, i32 2
  %303 = getelementptr %dimension_descriptor, %dimension_descriptor* %302, i32 0, i32 1
  %304 = load i32, i32* %303, align 4
  %305 = sub i32 %282, %304
  %306 = getelementptr %dimension_descriptor, %dimension_descriptor* %302, i32 0, i32 0
  %307 = load i32, i32* %306, align 4
  %308 = mul i32 %307, %305
  %309 = add i32 %301, %308
  %310 = getelementptr %array, %array* %283, i32 0, i32 1
  %311 = load i32, i32* %310, align 4
  %312 = add i32 %309, %311
  %313 = getelementptr %array, %array* %283, i32 0, i32 0
  %314 = load float*, float** %313, align 8
  %315 = getelementptr inbounds float, float* %314, i32 %312
  %316 = load float, float* %315, align 4
  %317 = load i32, i32* %__1_v, align 4
  %318 = load i32, i32* %__2_v, align 4
  %319 = load i32, i32* %__3_v, align 4
  %320 = load i32, i32* %__1c, align 4
  %321 = load i32, i32* %__2c, align 4
  %322 = load i32, i32* %__3c, align 4
  %323 = load i32, i32* %__4c, align 4
  %324 = load i32, i32* %__5c, align 4
  %325 = load i32, i32* %__6c, align 4
  %326 = sub i32 %317, %320
  %327 = mul i32 1, %326
  %328 = add i32 0, %327
  %329 = mul i32 1, %321
  %330 = sub i32 %318, %322
  %331 = mul i32 %329, %330
  %332 = add i32 %328, %331
  %333 = mul i32 %329, %323
  %334 = sub i32 %319, %324
  %335 = mul i32 %333, %334
  %336 = add i32 %332, %335
  %337 = mul i32 %333, %325
  %338 = getelementptr inbounds float, float* %c, i32 %336
  %339 = load float, float* %338, align 4
  %340 = fadd float %316, %339
  store float %340, float* %279, align 4
  %341 = load i32, i32* %__3_v, align 4
  %342 = add i32 %341, 1
  store i32 %342, i32* %__3_v, align 4
  br label %loop.head11

loop.end13:                                       ; preds = %loop.head11
  store i32 2, i32* %__3_t, align 4
  %343 = load i32, i32* %__2_v, align 4
  %344 = add i32 %343, 1
  store i32 %344, i32* %__2_v, align 4
  br label %loop.head9

loop.end14:                                       ; preds = %loop.head9
  store i32 2, i32* %__2_t, align 4
  %345 = load i32, i32* %__1_v, align 4
  %346 = add i32 %345, 1
  store i32 %346, i32* %__1_v, align 4
  br label %loop.head7

loop.end15:                                       ; preds = %loop.head7
  store i32 2, i32* %__1_t, align 4
  br label %return

return:                                           ; preds = %loop.end15
  ret void
}

define void @check_c(float* %c, i32* %__1c, i32* %__2c, i32* %__3c, i32* %__4c, i32* %__5c, i32* %__6c) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %0 = load i32, i32* %__1c, align 4
  %1 = sub i32 %0, 1
  store i32 %1, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %2 = load i32, i32* %i, align 4
  %3 = add i32 %2, 1
  %4 = load i32, i32* %__2c, align 4
  %5 = load i32, i32* %__1c, align 4
  %6 = add i32 %4, %5
  %7 = sub i32 %6, 1
  %8 = icmp sle i32 %3, %7
  br i1 %8, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %9 = load i32, i32* %i, align 4
  %10 = add i32 %9, 1
  store i32 %10, i32* %i, align 4
  %11 = load i32, i32* %__3c, align 4
  %12 = sub i32 %11, 1
  store i32 %12, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %13 = load i32, i32* %j, align 4
  %14 = add i32 %13, 1
  %15 = load i32, i32* %__4c, align 4
  %16 = load i32, i32* %__3c, align 4
  %17 = add i32 %15, %16
  %18 = sub i32 %17, 1
  %19 = icmp sle i32 %14, %18
  br i1 %19, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %20 = load i32, i32* %j, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %j, align 4
  %22 = load i32, i32* %__5c, align 4
  %23 = sub i32 %22, 1
  store i32 %23, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %ifcont, %loop.body2
  %24 = load i32, i32* %k, align 4
  %25 = add i32 %24, 1
  %26 = load i32, i32* %__6c, align 4
  %27 = load i32, i32* %__5c, align 4
  %28 = add i32 %26, %27
  %29 = sub i32 %28, 1
  %30 = icmp sle i32 %25, %29
  br i1 %30, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %31 = load i32, i32* %k, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %k, align 4
  %33 = load i32, i32* %i, align 4
  %34 = load i32, i32* %j, align 4
  %35 = load i32, i32* %k, align 4
  %36 = load i32, i32* %__1c, align 4
  %37 = load i32, i32* %__2c, align 4
  %38 = load i32, i32* %__3c, align 4
  %39 = load i32, i32* %__4c, align 4
  %40 = load i32, i32* %__5c, align 4
  %41 = load i32, i32* %__6c, align 4
  %42 = sub i32 %33, %36
  %43 = mul i32 1, %42
  %44 = add i32 0, %43
  %45 = mul i32 1, %37
  %46 = sub i32 %34, %38
  %47 = mul i32 %45, %46
  %48 = add i32 %44, %47
  %49 = mul i32 %45, %39
  %50 = sub i32 %35, %40
  %51 = mul i32 %49, %50
  %52 = add i32 %48, %51
  %53 = mul i32 %49, %41
  %54 = getelementptr inbounds float, float* %c, i32 %52
  %55 = load float, float* %54, align 4
  %56 = load i32, i32* %i, align 4
  %57 = load i32, i32* %j, align 4
  %58 = add i32 %56, %57
  %59 = load i32, i32* %k, align 4
  %60 = add i32 %58, %59
  %61 = sitofp i32 %60 to float
  %62 = call float @llvm.pow.f32(float %61, float 2.000000e+00)
  %63 = fptosi float %62 to i32
  %64 = sitofp i32 %63 to float
  %65 = fcmp une float %55, %64
  br i1 %65, label %then, label %else

then:                                             ; preds = %loop.body4
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.body4
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  %66 = load i32, i32* %__5c, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %k, align 4
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  %68 = load i32, i32* %__3c, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %j, align 4
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %70 = load i32, i32* %__1c, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %i, align 4
  br label %return

return:                                           ; preds = %loop.end6
  ret void
}

declare i8* @_lfortran_malloc(i32, ...)

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.pow.f32(float, float) #0

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

define i32 @main(i32 %0, i8** %1) {
.entry:
  %call_arg_value130 = alloca i32, align 4
  %call_arg_value129 = alloca i32, align 4
  %call_arg_value128 = alloca i32, align 4
  %call_arg_value127 = alloca i32, align 4
  %call_arg_value126 = alloca i32, align 4
  %call_arg_value125 = alloca i32, align 4
  %array_bound117 = alloca i32, align 4
  %array_bound108 = alloca i32, align 4
  %array_bound99 = alloca i32, align 4
  %array_bound89 = alloca i32, align 4
  %array_bound80 = alloca i32, align 4
  %array_bound72 = alloca i32, align 4
  %array_bound63 = alloca i32, align 4
  %array_bound54 = alloca i32, align 4
  %array_bound46 = alloca i32, align 4
  %array_bound37 = alloca i32, align 4
  %array_bound28 = alloca i32, align 4
  %array_bound = alloca i32, align 4
  %call_arg_value23 = alloca i32, align 4
  %call_arg_value22 = alloca i32, align 4
  %call_arg_value21 = alloca i32, align 4
  %call_arg_value20 = alloca i32, align 4
  %call_arg_value19 = alloca i32, align 4
  %call_arg_value18 = alloca i32, align 4
  %call_arg_value17 = alloca i32, align 4
  %call_arg_value16 = alloca i32, align 4
  %call_arg_value15 = alloca i32, align 4
  %call_arg_value14 = alloca i32, align 4
  %call_arg_value13 = alloca i32, align 4
  %call_arg_value12 = alloca i32, align 4
  %call_arg_value11 = alloca i32, align 4
  %call_arg_value10 = alloca i32, align 4
  %call_arg_value9 = alloca i32, align 4
  %call_arg_value8 = alloca i32, align 4
  %call_arg_value7 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %__1_t = alloca i32, align 4
  %__1_v = alloca i32, align 4
  %__2_t = alloca i32, align 4
  %__2_v = alloca i32, align 4
  %__3_t = alloca i32, align 4
  %__3_v = alloca i32, align 4
  %__libasr__created__var__1__func_call_res = alloca [8 x float], align 4
  %a = alloca [8 x float], align 4
  %b = alloca [8 x float], align 4
  %c = alloca [8 x float], align 4
  %d = alloca [8 x float], align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %2 = load i32, i32* %i, align 4
  %3 = add i32 %2, 1
  %4 = icmp sle i32 %3, 2
  br i1 %4, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %5 = load i32, i32* %i, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %7 = load i32, i32* %j, align 4
  %8 = add i32 %7, 1
  %9 = icmp sle i32 %8, 2
  br i1 %9, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %10 = load i32, i32* %j, align 4
  %11 = add i32 %10, 1
  store i32 %11, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %12 = load i32, i32* %k, align 4
  %13 = add i32 %12, 1
  %14 = icmp sle i32 %13, 2
  br i1 %14, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %15 = load i32, i32* %k, align 4
  %16 = add i32 %15, 1
  store i32 %16, i32* %k, align 4
  %17 = load i32, i32* %i, align 4
  %18 = load i32, i32* %j, align 4
  %19 = load i32, i32* %k, align 4
  %20 = sub i32 %17, 1
  %21 = mul i32 1, %20
  %22 = add i32 0, %21
  %23 = sub i32 %18, 1
  %24 = mul i32 2, %23
  %25 = add i32 %22, %24
  %26 = sub i32 %19, 1
  %27 = mul i32 4, %26
  %28 = add i32 %25, %27
  %29 = getelementptr [8 x float], [8 x float]* %a, i32 0, i32 %28
  %30 = load i32, i32* %i, align 4
  %31 = load i32, i32* %i, align 4
  %32 = mul i32 %30, %31
  %33 = load i32, i32* %j, align 4
  %34 = load i32, i32* %j, align 4
  %35 = mul i32 %33, %34
  %36 = add i32 %32, %35
  %37 = load i32, i32* %k, align 4
  %38 = load i32, i32* %k, align 4
  %39 = mul i32 %37, %38
  %40 = add i32 %36, %39
  %41 = sitofp i32 %40 to float
  store float %41, float* %29, align 4
  %42 = load i32, i32* %i, align 4
  %43 = load i32, i32* %j, align 4
  %44 = load i32, i32* %k, align 4
  %45 = sub i32 %42, 1
  %46 = mul i32 1, %45
  %47 = add i32 0, %46
  %48 = sub i32 %43, 1
  %49 = mul i32 2, %48
  %50 = add i32 %47, %49
  %51 = sub i32 %44, 1
  %52 = mul i32 4, %51
  %53 = add i32 %50, %52
  %54 = getelementptr [8 x float], [8 x float]* %b, i32 0, i32 %53
  %55 = load i32, i32* %i, align 4
  %56 = load i32, i32* %j, align 4
  %57 = mul i32 %55, %56
  %58 = load i32, i32* %j, align 4
  %59 = load i32, i32* %k, align 4
  %60 = mul i32 %58, %59
  %61 = add i32 %57, %60
  %62 = load i32, i32* %i, align 4
  %63 = load i32, i32* %k, align 4
  %64 = mul i32 %62, %63
  %65 = add i32 %61, %64
  %66 = mul i32 2, %65
  %67 = sitofp i32 %66 to float
  store float %67, float* %54, align 4
  %68 = load i32, i32* %i, align 4
  %69 = load i32, i32* %j, align 4
  %70 = load i32, i32* %k, align 4
  %71 = sub i32 %68, 1
  %72 = mul i32 1, %71
  %73 = add i32 0, %72
  %74 = sub i32 %69, 1
  %75 = mul i32 2, %74
  %76 = add i32 %73, %75
  %77 = sub i32 %70, 1
  %78 = mul i32 4, %77
  %79 = add i32 %76, %78
  %80 = getelementptr [8 x float], [8 x float]* %c, i32 0, i32 %79
  store float 0.000000e+00, float* %80, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  store i32 2, i32* %k, align 4
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  store i32 2, i32* %j, align 4
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  store i32 2, i32* %i, align 4
  %81 = getelementptr [8 x float], [8 x float]* %a, i32 0, i32 0
  store i32 1, i32* %call_arg_value, align 4
  store i32 2, i32* %call_arg_value7, align 4
  store i32 1, i32* %call_arg_value8, align 4
  store i32 2, i32* %call_arg_value9, align 4
  store i32 1, i32* %call_arg_value10, align 4
  store i32 2, i32* %call_arg_value11, align 4
  %82 = getelementptr [8 x float], [8 x float]* %b, i32 0, i32 0
  store i32 1, i32* %call_arg_value12, align 4
  store i32 2, i32* %call_arg_value13, align 4
  store i32 1, i32* %call_arg_value14, align 4
  store i32 2, i32* %call_arg_value15, align 4
  store i32 1, i32* %call_arg_value16, align 4
  store i32 2, i32* %call_arg_value17, align 4
  %83 = getelementptr [8 x float], [8 x float]* %c, i32 0, i32 0
  store i32 1, i32* %call_arg_value18, align 4
  store i32 2, i32* %call_arg_value19, align 4
  store i32 1, i32* %call_arg_value20, align 4
  store i32 2, i32* %call_arg_value21, align 4
  store i32 1, i32* %call_arg_value22, align 4
  store i32 2, i32* %call_arg_value23, align 4
  call void @asquare_a_b_c(float* %81, i32* %call_arg_value, i32* %call_arg_value7, i32* %call_arg_value8, i32* %call_arg_value9, i32* %call_arg_value10, i32* %call_arg_value11, float* %82, i32* %call_arg_value12, i32* %call_arg_value13, i32* %call_arg_value14, i32* %call_arg_value15, i32* %call_arg_value16, i32* %call_arg_value17, float* %83, i32* %call_arg_value18, i32* %call_arg_value19, i32* %call_arg_value20, i32* %call_arg_value21, i32* %call_arg_value22, i32* %call_arg_value23, [8 x float]* %__libasr__created__var__1__func_call_res)
  br i1 true, label %then, label %else

then:                                             ; preds = %loop.end6
  store i32 1, i32* %array_bound, align 4
  br label %ifcont

else:                                             ; preds = %loop.end6
  br i1 false, label %then24, label %else25

then24:                                           ; preds = %else
  store i32 1, i32* %array_bound, align 4
  br label %ifcont

else25:                                           ; preds = %else
  br i1 false, label %then26, label %else27

then26:                                           ; preds = %else25
  store i32 1, i32* %array_bound, align 4
  br label %ifcont

else27:                                           ; preds = %else25
  br label %ifcont

ifcont:                                           ; preds = %else27, %then26, %then24, %then
  %84 = load i32, i32* %array_bound, align 4
  store i32 %84, i32* %__1_v, align 4
  br i1 true, label %then29, label %else30

then29:                                           ; preds = %ifcont
  store i32 1, i32* %array_bound28, align 4
  br label %ifcont35

else30:                                           ; preds = %ifcont
  br i1 false, label %then31, label %else32

then31:                                           ; preds = %else30
  store i32 1, i32* %array_bound28, align 4
  br label %ifcont35

else32:                                           ; preds = %else30
  br i1 false, label %then33, label %else34

then33:                                           ; preds = %else32
  store i32 1, i32* %array_bound28, align 4
  br label %ifcont35

else34:                                           ; preds = %else32
  br label %ifcont35

ifcont35:                                         ; preds = %else34, %then33, %then31, %then29
  %85 = load i32, i32* %array_bound28, align 4
  %86 = sub i32 %85, 1
  store i32 %86, i32* %__1_t, align 4
  br label %loop.head36

loop.head36:                                      ; preds = %ifcont115, %ifcont35
  %87 = load i32, i32* %__1_t, align 4
  %88 = add i32 %87, 1
  br i1 true, label %then38, label %else39

then38:                                           ; preds = %loop.head36
  store i32 2, i32* %array_bound37, align 4
  br label %ifcont44

else39:                                           ; preds = %loop.head36
  br i1 false, label %then40, label %else41

then40:                                           ; preds = %else39
  store i32 2, i32* %array_bound37, align 4
  br label %ifcont44

else41:                                           ; preds = %else39
  br i1 false, label %then42, label %else43

then42:                                           ; preds = %else41
  store i32 2, i32* %array_bound37, align 4
  br label %ifcont44

else43:                                           ; preds = %else41
  br label %ifcont44

ifcont44:                                         ; preds = %else43, %then42, %then40, %then38
  %89 = load i32, i32* %array_bound37, align 4
  %90 = icmp sle i32 %88, %89
  br i1 %90, label %loop.body45, label %loop.end116

loop.body45:                                      ; preds = %ifcont44
  %91 = load i32, i32* %__1_t, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %__1_t, align 4
  br i1 true, label %then47, label %else48

then47:                                           ; preds = %loop.body45
  store i32 1, i32* %array_bound46, align 4
  br label %ifcont53

else48:                                           ; preds = %loop.body45
  br i1 false, label %then49, label %else50

then49:                                           ; preds = %else48
  store i32 1, i32* %array_bound46, align 4
  br label %ifcont53

else50:                                           ; preds = %else48
  br i1 false, label %then51, label %else52

then51:                                           ; preds = %else50
  store i32 1, i32* %array_bound46, align 4
  br label %ifcont53

else52:                                           ; preds = %else50
  br label %ifcont53

ifcont53:                                         ; preds = %else52, %then51, %then49, %then47
  %93 = load i32, i32* %array_bound46, align 4
  store i32 %93, i32* %__2_v, align 4
  br i1 false, label %then55, label %else56

then55:                                           ; preds = %ifcont53
  store i32 1, i32* %array_bound54, align 4
  br label %ifcont61

else56:                                           ; preds = %ifcont53
  br i1 true, label %then57, label %else58

then57:                                           ; preds = %else56
  store i32 1, i32* %array_bound54, align 4
  br label %ifcont61

else58:                                           ; preds = %else56
  br i1 false, label %then59, label %else60

then59:                                           ; preds = %else58
  store i32 1, i32* %array_bound54, align 4
  br label %ifcont61

else60:                                           ; preds = %else58
  br label %ifcont61

ifcont61:                                         ; preds = %else60, %then59, %then57, %then55
  %94 = load i32, i32* %array_bound54, align 4
  %95 = sub i32 %94, 1
  store i32 %95, i32* %__2_t, align 4
  br label %loop.head62

loop.head62:                                      ; preds = %ifcont106, %ifcont61
  %96 = load i32, i32* %__2_t, align 4
  %97 = add i32 %96, 1
  br i1 false, label %then64, label %else65

then64:                                           ; preds = %loop.head62
  store i32 2, i32* %array_bound63, align 4
  br label %ifcont70

else65:                                           ; preds = %loop.head62
  br i1 true, label %then66, label %else67

then66:                                           ; preds = %else65
  store i32 2, i32* %array_bound63, align 4
  br label %ifcont70

else67:                                           ; preds = %else65
  br i1 false, label %then68, label %else69

then68:                                           ; preds = %else67
  store i32 2, i32* %array_bound63, align 4
  br label %ifcont70

else69:                                           ; preds = %else67
  br label %ifcont70

ifcont70:                                         ; preds = %else69, %then68, %then66, %then64
  %98 = load i32, i32* %array_bound63, align 4
  %99 = icmp sle i32 %97, %98
  br i1 %99, label %loop.body71, label %loop.end107

loop.body71:                                      ; preds = %ifcont70
  %100 = load i32, i32* %__2_t, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %__2_t, align 4
  br i1 false, label %then73, label %else74

then73:                                           ; preds = %loop.body71
  store i32 1, i32* %array_bound72, align 4
  br label %ifcont79

else74:                                           ; preds = %loop.body71
  br i1 true, label %then75, label %else76

then75:                                           ; preds = %else74
  store i32 1, i32* %array_bound72, align 4
  br label %ifcont79

else76:                                           ; preds = %else74
  br i1 false, label %then77, label %else78

then77:                                           ; preds = %else76
  store i32 1, i32* %array_bound72, align 4
  br label %ifcont79

else78:                                           ; preds = %else76
  br label %ifcont79

ifcont79:                                         ; preds = %else78, %then77, %then75, %then73
  %102 = load i32, i32* %array_bound72, align 4
  store i32 %102, i32* %__3_v, align 4
  br i1 false, label %then81, label %else82

then81:                                           ; preds = %ifcont79
  store i32 1, i32* %array_bound80, align 4
  br label %ifcont87

else82:                                           ; preds = %ifcont79
  br i1 false, label %then83, label %else84

then83:                                           ; preds = %else82
  store i32 1, i32* %array_bound80, align 4
  br label %ifcont87

else84:                                           ; preds = %else82
  br i1 true, label %then85, label %else86

then85:                                           ; preds = %else84
  store i32 1, i32* %array_bound80, align 4
  br label %ifcont87

else86:                                           ; preds = %else84
  br label %ifcont87

ifcont87:                                         ; preds = %else86, %then85, %then83, %then81
  %103 = load i32, i32* %array_bound80, align 4
  %104 = sub i32 %103, 1
  store i32 %104, i32* %__3_t, align 4
  br label %loop.head88

loop.head88:                                      ; preds = %loop.body97, %ifcont87
  %105 = load i32, i32* %__3_t, align 4
  %106 = add i32 %105, 1
  br i1 false, label %then90, label %else91

then90:                                           ; preds = %loop.head88
  store i32 2, i32* %array_bound89, align 4
  br label %ifcont96

else91:                                           ; preds = %loop.head88
  br i1 false, label %then92, label %else93

then92:                                           ; preds = %else91
  store i32 2, i32* %array_bound89, align 4
  br label %ifcont96

else93:                                           ; preds = %else91
  br i1 true, label %then94, label %else95

then94:                                           ; preds = %else93
  store i32 2, i32* %array_bound89, align 4
  br label %ifcont96

else95:                                           ; preds = %else93
  br label %ifcont96

ifcont96:                                         ; preds = %else95, %then94, %then92, %then90
  %107 = load i32, i32* %array_bound89, align 4
  %108 = icmp sle i32 %106, %107
  br i1 %108, label %loop.body97, label %loop.end98

loop.body97:                                      ; preds = %ifcont96
  %109 = load i32, i32* %__3_t, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %__3_t, align 4
  %111 = load i32, i32* %__1_t, align 4
  %112 = load i32, i32* %__2_t, align 4
  %113 = load i32, i32* %__3_t, align 4
  %114 = sub i32 %111, 1
  %115 = mul i32 1, %114
  %116 = add i32 0, %115
  %117 = sub i32 %112, 1
  %118 = mul i32 2, %117
  %119 = add i32 %116, %118
  %120 = sub i32 %113, 1
  %121 = mul i32 4, %120
  %122 = add i32 %119, %121
  %123 = getelementptr [8 x float], [8 x float]* %d, i32 0, i32 %122
  %124 = load i32, i32* %__1_v, align 4
  %125 = load i32, i32* %__2_v, align 4
  %126 = load i32, i32* %__3_v, align 4
  %127 = sub i32 %124, 1
  %128 = mul i32 1, %127
  %129 = add i32 0, %128
  %130 = sub i32 %125, 1
  %131 = mul i32 2, %130
  %132 = add i32 %129, %131
  %133 = sub i32 %126, 1
  %134 = mul i32 4, %133
  %135 = add i32 %132, %134
  %136 = getelementptr [8 x float], [8 x float]* %__libasr__created__var__1__func_call_res, i32 0, i32 %135
  %137 = load float, float* %136, align 4
  store float %137, float* %123, align 4
  %138 = load i32, i32* %__3_v, align 4
  %139 = add i32 %138, 1
  store i32 %139, i32* %__3_v, align 4
  br label %loop.head88

loop.end98:                                       ; preds = %ifcont96
  br i1 false, label %then100, label %else101

then100:                                          ; preds = %loop.end98
  store i32 1, i32* %array_bound99, align 4
  br label %ifcont106

else101:                                          ; preds = %loop.end98
  br i1 false, label %then102, label %else103

then102:                                          ; preds = %else101
  store i32 1, i32* %array_bound99, align 4
  br label %ifcont106

else103:                                          ; preds = %else101
  br i1 true, label %then104, label %else105

then104:                                          ; preds = %else103
  store i32 1, i32* %array_bound99, align 4
  br label %ifcont106

else105:                                          ; preds = %else103
  br label %ifcont106

ifcont106:                                        ; preds = %else105, %then104, %then102, %then100
  %140 = load i32, i32* %array_bound99, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %__3_t, align 4
  %142 = load i32, i32* %__2_v, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %__2_v, align 4
  br label %loop.head62

loop.end107:                                      ; preds = %ifcont70
  br i1 false, label %then109, label %else110

then109:                                          ; preds = %loop.end107
  store i32 1, i32* %array_bound108, align 4
  br label %ifcont115

else110:                                          ; preds = %loop.end107
  br i1 true, label %then111, label %else112

then111:                                          ; preds = %else110
  store i32 1, i32* %array_bound108, align 4
  br label %ifcont115

else112:                                          ; preds = %else110
  br i1 false, label %then113, label %else114

then113:                                          ; preds = %else112
  store i32 1, i32* %array_bound108, align 4
  br label %ifcont115

else114:                                          ; preds = %else112
  br label %ifcont115

ifcont115:                                        ; preds = %else114, %then113, %then111, %then109
  %144 = load i32, i32* %array_bound108, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %__2_t, align 4
  %146 = load i32, i32* %__1_v, align 4
  %147 = add i32 %146, 1
  store i32 %147, i32* %__1_v, align 4
  br label %loop.head36

loop.end116:                                      ; preds = %ifcont44
  br i1 true, label %then118, label %else119

then118:                                          ; preds = %loop.end116
  store i32 1, i32* %array_bound117, align 4
  br label %ifcont124

else119:                                          ; preds = %loop.end116
  br i1 false, label %then120, label %else121

then120:                                          ; preds = %else119
  store i32 1, i32* %array_bound117, align 4
  br label %ifcont124

else121:                                          ; preds = %else119
  br i1 false, label %then122, label %else123

then122:                                          ; preds = %else121
  store i32 1, i32* %array_bound117, align 4
  br label %ifcont124

else123:                                          ; preds = %else121
  br label %ifcont124

ifcont124:                                        ; preds = %else123, %then122, %then120, %then118
  %148 = load i32, i32* %array_bound117, align 4
  %149 = add i32 %148, 1
  store i32 %149, i32* %__1_t, align 4
  %150 = getelementptr [8 x float], [8 x float]* %d, i32 0, i32 0
  store i32 1, i32* %call_arg_value125, align 4
  store i32 2, i32* %call_arg_value126, align 4
  store i32 1, i32* %call_arg_value127, align 4
  store i32 2, i32* %call_arg_value128, align 4
  store i32 1, i32* %call_arg_value129, align 4
  store i32 2, i32* %call_arg_value130, align 4
  call void @check_c(float* %150, i32* %call_arg_value125, i32* %call_arg_value126, i32* %call_arg_value127, i32* %call_arg_value128, i32* %call_arg_value129, i32* %call_arg_value130)
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

attributes #0 = { nounwind readnone speculatable willreturn }
