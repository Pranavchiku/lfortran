; ModuleID = 'LFortran'
source_filename = "LFortran"

%model_t = type { %array* }
%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@4 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@5 = private unnamed_addr constant [2 x i8] c" \00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\08\00", align 1
@7 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c" \00", align 1
@9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@10 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define void @decode_idx(i32* %idx, i32* %__1idx, i32* %__2idx) {
.entry:
  %0 = load i32, i32* %__1idx, align 4
  %1 = load i32, i32* %__2idx, align 4
  %2 = sub i32 4, %0
  %3 = mul i32 1, %2
  %4 = add i32 0, %3
  %5 = mul i32 1, %1
  %6 = getelementptr inbounds i32, i32* %idx, i32 %4
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %9 = load i32, i32* %__1idx, align 4
  %10 = load i32, i32* %__2idx, align 4
  %11 = sub i32 5, %9
  %12 = mul i32 1, %11
  %13 = add i32 0, %12
  %14 = mul i32 1, %10
  %15 = getelementptr inbounds i32, i32* %idx, i32 %13
  %16 = load i32, i32* %15, align 4
  %17 = icmp ne i32 %16, 5
  br i1 %17, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  br label %return

return:                                           ; preds = %ifcont3
  ret void
}

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

define i32 @main(i32 %0, i8** %1) {
.entry:
  %call_arg_value4 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %__1_k = alloca i32, align 4
  %__1_t = alloca i32, align 4
  %m = alloca %model_t, align 8
  %2 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  store %array* null, %array** %2, align 8
  %arr_desc = alloca %array, align 8
  %3 = getelementptr %array, %array* %arr_desc, i32 0, i32 2
  %4 = alloca i32, align 4
  store i32 1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = alloca %dimension_descriptor, i32 %5, align 8
  store %dimension_descriptor* %6, %dimension_descriptor** %3, align 8
  %7 = getelementptr %array, %array* %arr_desc, i32 0, i32 4
  store i32 1, i32* %7, align 4
  %8 = getelementptr %array, %array* %arr_desc, i32 0, i32 0
  store i32* null, i32** %8, align 8
  store %array* %arr_desc, %array** %2, align 8
  %9 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %10 = load %array*, %array** %9, align 8
  %11 = getelementptr %array, %array* %10, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr %array, %array* %10, i32 0, i32 2
  %13 = load %dimension_descriptor*, %dimension_descriptor** %12, align 8
  %14 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %13, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 0
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 1
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 2
  store i32 1, i32* %15, align 4
  store i32 1, i32* %16, align 4
  store i32 10, i32* %17, align 4
  %18 = getelementptr %array, %array* %10, i32 0, i32 0
  %19 = alloca i32, align 4
  store i32 40, i32* %19, align 4
  %20 = load i32, i32* %19, align 4
  %21 = call i8* (i32, ...) @_lfortran_malloc(i32 %20)
  %22 = bitcast i8* %21 to i32*
  store i32* %22, i32** %18, align 8
  %23 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %24 = load %array*, %array** %23, align 8
  %25 = getelementptr %array, %array* %24, i32 0, i32 2
  %26 = load %dimension_descriptor*, %dimension_descriptor** %25, align 8
  %27 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %26, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = sub i32 %29, 1
  store i32 %30, i32* %__1_t, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %31 = load i32, i32* %__1_t, align 4
  %32 = add i32 %31, 1
  %33 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %34 = load %array*, %array** %33, align 8
  %35 = getelementptr %array, %array* %34, i32 0, i32 2
  %36 = load %dimension_descriptor*, %dimension_descriptor** %35, align 8
  %37 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %36, i32 0
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %37, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %37, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, %39
  %43 = sub i32 %42, 1
  %44 = icmp sle i32 %32, %43
  br i1 %44, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %45 = load i32, i32* %__1_t, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %__1_t, align 4
  %47 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %48 = load i32, i32* %__1_t, align 4
  %49 = load %array*, %array** %47, align 8
  %50 = getelementptr %array, %array* %49, i32 0, i32 2
  %51 = load %dimension_descriptor*, %dimension_descriptor** %50, align 8
  %52 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %51, i32 0
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sub i32 %48, %54
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = mul i32 %57, %55
  %59 = add i32 0, %58
  %60 = getelementptr %array, %array* %49, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = add i32 %59, %61
  %63 = getelementptr %array, %array* %49, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = getelementptr inbounds i32, i32* %64, i32 %62
  store i32 0, i32* %65, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %66 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %67 = load %array*, %array** %66, align 8
  %68 = getelementptr %array, %array* %67, i32 0, i32 2
  %69 = load %dimension_descriptor*, %dimension_descriptor** %68, align 8
  %70 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %69, i32 0
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %__1_t, align 4
  %74 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %75 = load %array*, %array** %74, align 8
  %76 = getelementptr %array, %array* %75, i32 0, i32 2
  %77 = load %dimension_descriptor*, %dimension_descriptor** %76, align 8
  %78 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %77, i32 0
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = sub i32 5, %80
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = mul i32 %83, %81
  %85 = add i32 0, %84
  %86 = getelementptr %array, %array* %75, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = add i32 %85, %87
  %89 = getelementptr %array, %array* %75, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = getelementptr inbounds i32, i32* %90, i32 %88
  store i32 5, i32* %91, align 4
  %92 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %93 = load %array*, %array** %92, align 8
  %94 = getelementptr %array, %array* %93, i32 0, i32 2
  %95 = load %dimension_descriptor*, %dimension_descriptor** %94, align 8
  %96 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %95, i32 0
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = sub i32 %98, 1
  store i32 %99, i32* %__1_k, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %loop.end
  %100 = load i32, i32* %__1_k, align 4
  %101 = add i32 %100, 1
  %102 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %103 = load %array*, %array** %102, align 8
  %104 = getelementptr %array, %array* %103, i32 0, i32 2
  %105 = load %dimension_descriptor*, %dimension_descriptor** %104, align 8
  %106 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %105, i32 0
  %107 = getelementptr %dimension_descriptor, %dimension_descriptor* %106, i32 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr %dimension_descriptor, %dimension_descriptor* %106, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, %108
  %112 = sub i32 %111, 1
  %113 = icmp sle i32 %101, %112
  br i1 %113, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %114 = load i32, i32* %__1_k, align 4
  %115 = add i32 %114, 1
  store i32 %115, i32* %__1_k, align 4
  %116 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %117 = load i32, i32* %__1_k, align 4
  %118 = load %array*, %array** %116, align 8
  %119 = getelementptr %array, %array* %118, i32 0, i32 2
  %120 = load %dimension_descriptor*, %dimension_descriptor** %119, align 8
  %121 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %120, i32 0
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = sub i32 %117, %123
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = mul i32 %126, %124
  %128 = add i32 0, %127
  %129 = getelementptr %array, %array* %118, i32 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = add i32 %128, %130
  %132 = getelementptr %array, %array* %118, i32 0, i32 0
  %133 = load i32*, i32** %132, align 8
  %134 = getelementptr inbounds i32, i32* %133, i32 %131
  %135 = load i32, i32* %134, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i32 0, i32 0), i32 %135, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0))
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  %136 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %137 = load %array*, %array** %136, align 8
  %138 = getelementptr %array, %array* %137, i32 0, i32 2
  %139 = load %dimension_descriptor*, %dimension_descriptor** %138, align 8
  %140 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %139, i32 0
  %141 = getelementptr %dimension_descriptor, %dimension_descriptor* %140, i32 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %__1_k, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  %144 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %145 = load %array*, %array** %144, align 8
  %146 = getelementptr %array, %array* %145, i32 0, i32 0
  %147 = load i32*, i32** %146, align 8
  %148 = getelementptr %array, %array* %145, i32 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds i32, i32* %147, i32 %149
  %151 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %152 = load %array*, %array** %151, align 8
  %153 = getelementptr %array, %array* %152, i32 0, i32 2
  %154 = load %dimension_descriptor*, %dimension_descriptor** %153, align 8
  %155 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %154, i32 0
  %156 = getelementptr %dimension_descriptor, %dimension_descriptor* %155, i32 0, i32 1
  %157 = load i32, i32* %156, align 4
  store i32 %157, i32* %call_arg_value, align 4
  %158 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %159 = load %array*, %array** %158, align 8
  %160 = getelementptr %array, %array* %159, i32 0, i32 2
  %161 = load %dimension_descriptor*, %dimension_descriptor** %160, align 8
  %162 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %161, i32 0
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %162, i32 0, i32 2
  %164 = load i32, i32* %163, align 4
  store i32 %164, i32* %call_arg_value4, align 4
  call void @decode_idx(i32* %150, i32* %call_arg_value, i32* %call_arg_value4)
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_printf(i8*, ...)
