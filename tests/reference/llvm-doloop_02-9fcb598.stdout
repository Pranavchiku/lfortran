; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [2 x i8] c" \00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [2 x i8] c" \00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %j, align 4
  store i32 1, i32* %a, align 4
  store i32 10, i32* %b, align 4
  %2 = load i32, i32* %a, align 4
  %3 = sub i32 %2, 1
  store i32 %3, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %4 = load i32, i32* %i, align 4
  %5 = add i32 %4, 1
  %6 = load i32, i32* %b, align 4
  %7 = icmp sle i32 %5, %6
  br i1 %7, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %8 = load i32, i32* %i, align 4
  %9 = add i32 %8, 1
  store i32 %9, i32* %i, align 4
  %10 = load i32, i32* %j, align 4
  %11 = load i32, i32* %i, align 4
  %12 = add i32 %10, %11
  store i32 %12, i32* %j, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %13 = load i32, i32* %a, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %i, align 4
  %15 = load i32, i32* %j, align 4
  %16 = icmp ne i32 %15, 55
  br i1 %16, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %17 = load i32, i32* %j, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i32 %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0))
  store i32 0, i32* %a, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end5, %ifcont
  %18 = load i32, i32* %i, align 4
  %19 = add i32 %18, 1
  %20 = icmp sle i32 %19, 10
  br i1 %20, label %loop.body2, label %loop.end6

loop.body2:                                       ; preds = %loop.head1
  %21 = load i32, i32* %i, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %23 = load i32, i32* %j, align 4
  %24 = add i32 %23, 1
  %25 = icmp sle i32 %24, 10
  br i1 %25, label %loop.body4, label %loop.end5

loop.body4:                                       ; preds = %loop.head3
  %26 = load i32, i32* %j, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %j, align 4
  %28 = load i32, i32* %a, align 4
  %29 = load i32, i32* %i, align 4
  %30 = sub i32 %29, 1
  %31 = mul i32 %30, 10
  %32 = add i32 %28, %31
  %33 = load i32, i32* %j, align 4
  %34 = add i32 %32, %33
  store i32 %34, i32* %a, align 4
  br label %loop.head3

loop.end5:                                        ; preds = %loop.head3
  store i32 2, i32* %j, align 4
  br label %loop.head1

loop.end6:                                        ; preds = %loop.head1
  store i32 2, i32* %i, align 4
  %35 = load i32, i32* %a, align 4
  %36 = icmp ne i32 %35, 5050
  br i1 %36, label %then7, label %else8

then7:                                            ; preds = %loop.end6
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont9

else8:                                            ; preds = %loop.end6
  br label %ifcont9

ifcont9:                                          ; preds = %else8, %then7
  %37 = load i32, i32* %a, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i32 %37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0))
  store i32 0, i32* %a, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.end14, %ifcont9
  %38 = load i32, i32* %i, align 4
  %39 = add i32 %38, 1
  %40 = icmp sle i32 %39, 10
  br i1 %40, label %loop.body11, label %loop.end15

loop.body11:                                      ; preds = %loop.head10
  %41 = load i32, i32* %i, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head12

loop.head12:                                      ; preds = %loop.body13, %loop.body11
  %43 = load i32, i32* %j, align 4
  %44 = add i32 %43, 1
  %45 = load i32, i32* %i, align 4
  %46 = icmp sle i32 %44, %45
  br i1 %46, label %loop.body13, label %loop.end14

loop.body13:                                      ; preds = %loop.head12
  %47 = load i32, i32* %j, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %j, align 4
  %49 = load i32, i32* %a, align 4
  %50 = load i32, i32* %j, align 4
  %51 = add i32 %49, %50
  store i32 %51, i32* %a, align 4
  br label %loop.head12

loop.end14:                                       ; preds = %loop.head12
  store i32 2, i32* %j, align 4
  br label %loop.head10

loop.end15:                                       ; preds = %loop.head10
  store i32 2, i32* %i, align 4
  %52 = load i32, i32* %a, align 4
  %53 = icmp ne i32 %52, 220
  br i1 %53, label %then16, label %else17

then16:                                           ; preds = %loop.end15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %loop.end15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %54 = load i32, i32* %a, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i32 %54, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0))
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_printf(i8*, ...)
